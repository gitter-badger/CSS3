%YAML 1.2
---
name: CSS3
file_extensions: [css, css.erb]
scope: source.css

variables:
  an_plus_b: '[+-]?\d*n(?:\s*[+-]\s*\d+)?'
  angle_unit: turn|grad|rad|deg
  arithmetic_operator: '[-+*/]'
  attr_matcher: '[~^$*|]?='
  # \b word boundaries are not enough to prevent some mismatches, like "clip\b"
  # matching "clip-path". adding negative lookahead for dashes fixes this.
  b: '\b{{not_followed_by_dash}}'
  column: '\|\|'
  combinator: '(?:{{column}}|>{1,3}|[+~])'
  custom_property_name: '--{{identifier}}'
  decibel_unit: 'dB'
  escape: '\\(?:[^\n\r\f\h]|\h{1,6}{{whitespace}}?)'
  exponent: '[eE][+-]?\d+'
  flex_unit: 'fr'
  frequency_unit: k?Hz
  generic_font_family: 'serif|sans-serif|monospace|fantasy|cursive'
  hex_color: '(#)(?:\h{8}|\h{6}|\h{3,4})\b'
  ident_char: '[-a-zA-Z\d_\\\p{^ASCII}]'
  ident_start: '-?[a-zA-Z_\\\p{^ASCII}]'
  identifier: '{{ident_start}}{{ident_char}}*'
  integer: '[+-]?\d+'
  integer_non_neg: \+?\d+
  integer_pos: '\+?(?:[1-9]\d+|[1-9])'
  integer_zero_to_255: '\b(?:2[0-5][0-5]|1\d\d|[1-9]\d|\d)\b'
  length_unit: r?em|ex|ch|vw|vh|vmin|vmax|cm|mm|q|in|pc|pt|px
  not_followed_by_dash: '(?!-)'
  ns_prefix: '(?:{{identifier}}|(\*))?(\|)'
  number: '[+-]?(?:\d+\.\d+|\.\d+|\d+)(?:{{exponent}})?'
  number_non_neg: '\+?(?:\d+\.\d+|\.\d+|\d+)(?:{{exponent}})?'
  number_pos: '\+?(?:\d+\.\d*[1-9]\d*|\.\d*[1-9]\d*|[1-9]\d*)(?:{{exponent}})?'
  number_zero_to_100: '\b(?:100(?:\.0+)?|[1-9]\d(?:\.\d+)?|\d(?:\.\d+)?|\.\d+)'
  number_zero_to_255: '\b(?:2[0-5][0-5](?:\.0+)?|1\d\d(?:\.\d+)?|[1-9]\d(?:\.\d+)?|\d(?:\.\d+)?)'
  number_zero_to_one: '\+?(?:0(?:\.\d+)?|1(?:\.0+)?|\.\d+)\b(?!\.)'
  optional_min_max_prefix: '\b(?:min-|max-)?'
  optional_top_right_left_bottom: '(?:top-|right-|left-|bottom-)?'
  percentage_unit: '%'
  ratio: '({{integer_pos}})\s*(\/)\s*({{integer_pos}})'
  resolution_unit: dppx|dpi|dpcm
  time_unit: m?s
  # '?' is a literal character that is legal in a <urange>
  unicode_range: '[uU]\+[\?\h]{1,6}(?:-[\?\h]{1,6})?'
  # '' is how you escape a single ' in YAML
  url_char: '[a-zA-Z0-9\-\._~:/\?#\[\]''@!$&()\*\+\%,;=]'
  vendor_prefix: '(?:-webkit-|-ms-|-moz-)?'
  whitespace: '[ \t\n]'
  wq_name: '({{ns_prefix}})?({{identifier}}|(\*))'
  zero: \b0\b

contexts:
  main:
    - include: at-font-feature-values
    - include: at-counter-style
    - include: at-custom-media
    - include: at-namespace
    - include: at-font-face
    - include: at-keyframes
    - include: at-supports
    - include: at-viewport
    - include: at-charset
    - include: at-import
    - include: at-media
    - include: at-page
    - include: rule

  angle:
    - include: func-calc
    - match: '(?x)
        (?:
          ({{number}})({{angle_unit}})\b|
          ({{zero}})
        )'
      captures:
        1: constant.numeric.css
        2: keyword.other.unit.css
        3: constant.numeric.css

  any-value:
    # We don't want to try to write a regex with every possible valid value,
    # including all keywords for each property. Therefore, we try to match every
    # valid unit, numeric type, and function. Any valid identifier after that is
    # assumed to be a valid property value.
    - include: value-css-wide  # includes "var()"
    - include: func-cubic-bezier
    - include: func-steps
    # TODO: finish adding funcs here
    - include: image
    - include: angle
    - include: frequency
    - include: percentage
    - include: resolution
    - include: time
    - include: position
    - include: length
    - include: an_plus_b
    - include: color
    - include: integer
    - include: number
    - include: string
    - match: '{{identifier}}'
      scope: support.constant.property-value.css

  an_plus_b:
    - match: 'odd|even|{{an_plus_b}}'
      scope: constant.other.an-plus-b.css
    - include: integer

  arithmetic-operator:
    - match: '{{arithmetic_operator}}'
      scope: keyword.operator.arithmetic.css

  attr-fallback:
    - include: string
    - include: color
    - include: func-url
    - include: frequency
    - include: angle
    - include: time
    - include: percentage
    - include: length
    - include: number

  at-charset:
    - match: '(@)charset{{b}}'
      captures:
        0: keyword.control.at-rule.charset.css
        1: punctuation.definition.keyword.css
      push:
        - match: ';'
          scope: punctuation.terminator.charset.css
          pop: true
        # This intentionally only matches UTF-8.
        - match: '''utf-8''|''UTF-8''|"utf-8"|"UTF-8"'
          scope: string.quoted.charset.css
    - include: stray-semicolon

  at-counter-style:
    - match: '(@)counter-style{{b}}'
      captures:
        0: keyword.control.at-rule.counter-style.css
        1: punctuation.definition.keyword.css
      push:
        - match: '}'
          scope: punctuation.section.counter-style-declaration-list.end.css
          pop: true
        - match: '{'
          scope: punctuation.section.counter-style-declaration-list.begin.css
          push:
            - match: '(?=})'
              pop: true
            - include: descriptors-counter-style
        - include: identifier
    - include: stray-brace

  at-custom-media:
    - match: '(@)custom-media{{b}}'
      captures:
        0: keyword.control.at-rule.custom-media.css
        1: punctuation.definition.keyword.css
      push:
        - match: ';'
          scope: punctuation.terminator.custom-media.css
          pop: true
        - match: '\b(?:true|false){{b}}'
          scope: support.constant.property-value.css
        - include: media-feature
        - include: media-feature-custom
    - include: stray-semicolon

  at-font-face:
    - match: '(@)font-face{{b}}'
      captures:
        0: keyword.control.at-rule.font-face.css
        1: punctuation.definition.keyword.css
      push:
        - match: '}'
          scope: punctuation.section.font-face-descriptor-block.end.css
          pop: true
        - match: '{'
          scope: punctuation.section.font-face-descriptor-block.begin.css
          push:
            - match: '(?=})'
              pop: true
            - include: descriptors-font-face
    - include: stray-brace

  at-font-feature-values:
    - match: '(@)font-feature-values{{b}}'
      captures:
        0: keyword.control.at-rule.font-feature-values.css
        1: punctuation.definition.keyword.css
      push:
        - match: '}'
          scope: punctuation.section.font-feature-values-rule.end.css
          pop: true
        - match: '{'
          scope: punctuation.section.font-feature-values-rule.begin.css
          push:
            - match: '(?=})'
              pop: true
            - include: font-feature-value-rule
        - include: string
        - include: identifier
    - include: stray-brace

  at-import:
    - match: '(@)import{{b}}'
      captures:
        0: keyword.control.at-rule.import.css
        1: punctuation.definition.keyword.css
      push:
        - match: ';'
          scope: punctuation.terminator.at-import.css
          pop: true
        - include: func-url
        - include: media-query-list
        - include: string
    - include: stray-semicolon

  at-keyframes:
    - match: '(@){{vendor_prefix}}keyframes{{b}}'
      captures:
        0: keyword.control.at-rule.keyframes.css
        1: punctuation.definition.keyword.css
      push:
        - match: '}'
          scope: punctuation.section.keyframes-rule.end.css
          pop: true
        - match: '{'
          scope: punctuation.section.keyframes-rule.begin.css
          push:
            - match: '(?=})'
              pop: true
            - include: keyframes-block
        - include: keyframes-name
    - include: stray-brace

  # Media queries start with "@media" and end with a closing curly brace. To
  # match this text, we define an outer scope that starts with "@media" and
  # continues until the closing "}". The text between the curlies is then
  # matched as a nested scope (the opening curly pushes a new scope on the
  # stack, which is popped at the closing curly). This lets us match the media
  # features before the opening curly and the text between the curlies in one
  # context.
  #
  # |-------------------outer scope-----------------------------------|
  #        |---media-features-etc----||--------nested scope----------|
  # @media stuff-before-opening-curly { selector { property: value; } }
  at-media:
    - match: '(@)media{{b}}'
      captures:
        0: keyword.control.at-rule.media.css
        1: punctuation.definition.keyword.css
      push:
        - match: '}'
          scope: punctuation.section.media-query.end.css
          pop: true
        - match: '{'
          scope: punctuation.section.media-query.begin.css
          push:
            - match: '(?=})'
              pop: true
            - include: nestable-at-rules
            - include: rule
        - include: media-query-list
    - include: stray-brace

  at-namespace:
    - match: '(@)namespace{{b}}'
      captures:
        0: keyword.control.at-rule.namespace.css
        1: punctuation.definition.keyword.css
      push:
        - match: ';'
          scope: punctuation.terminator.at-namespace.css
          pop: true
        - include: func-url
        - include: string
        - include: identifier
    - include: stray-semicolon

  at-page:
    - match: '(@)page{{b}}'
      captures:
        0: keyword.control.at-rule.page.css
        1: punctuation.definition.keyword.css
      push:
        - match: '}'
          scope: punctuation.section.at-page.end.css
          pop: true
        - match: '{'
          scope: punctuation.section.at-page.begin.css
          push:
            - match: '(?=})'
              pop: true
            - include: page-margin-box
            - include: properties
        - include: selector-page
    - include: stray-brace

  at-supports:
    - match: '(@)supports{{b}}'
      captures:
        0: keyword.control.at-rule.supports.css
        1: punctuation.definition.keyword.css
      push:
        - match: '}'
          scope: punctuation.section.at-supports.end.css
          pop: true
        - match: '{'
          scope: punctuation.section.at-supports.begin.css
          push:
            - match: '(?=})'
              pop: true
            - include: nestable-at-rules
            - include: rule
        - include: supports-condition-operator
        - include: supports-condition
    - include: stray-brace

  at-viewport:
    - match: '(@){{vendor_prefix}}viewport{{b}}'
      captures:
        0: keyword.control.at-rule.viewport.css
        1: punctuation.definition.keyword.css
      push:
        - match: '}'
          scope: punctuation.section.at-viewport.end.css
          pop: true
        - match: '{'
          scope: punctuation.section.at-viewport.begin.css
          push:
            - match: '(?=})'
              pop: true
            - include: viewport-descriptors

  attachment:
    - match: '\b(?:scroll|local|fixed){{b}}'
      scope: support.constant.property-value.css

  auto-repeat:
    - include: func-repeat

  auto-track-list:
    - include: line-names
    - include: fixed-repeat
    - include: auto-repeat
    - include: fixed-size

  baseline-position:
    - match: '\b(?:last-)?baseline{{b}}'
      scope: support.constant.property-value.css

  basic-shape:
    - include: func-inset
    - include: func-ellipse-circle
    - include: func-polygon

  blend-mode:
    - match: '(?x)
        \b
        (?:
          soft-light|
          screen|
          saturation|
          overlay|
          normal|
          multiply|
          luminosity|
          lighten|
          hue|
          hard-light|
          exclusion|
          difference|
          darken|
          color-dodge|
          color-burn|
          color
        )
        {{b}}'
      scope: support.constant.property-value.css

  bg-image:
    - include: image
    - match: '\bnone{{b}}'
      scope: support.constant.property-value.css

  bg-size:
    - match: '\b(?:cover|contain|auto){{b}}'
      scope: support.constant.property-value.css
    - include: percentage-non-negative
    - include: length-non-negative

  box:
    - match: '\b(?:padding-box|content-box|border-box){{b}}'
      scope: support.constant.property-value.css

  caret-shape:
    - match: '\b(?:underscore|block|bar|auto){{b}}'
      scope: support.constant.property-value.css

  color:
    - include: func-rgba
    - include: func-hsla
    - include: func-hwb
    - include: func-gray
    - include: func-device-cmyk
    - include: color-named
    - include: color-adjuster
    - include: hex-color

  color-adjuster:
    - include: func-color-adjuster-rgb
    - include: func-tint-shade-contrast
    - include: func-blenda
    - include: func-whiteness-saturation-lightness-hue-blackness
    - include: func-red-green-blue-alpha-a

  color-adjuster-operator:
    - match: '[*+-]'
      scope: keyword.operator.arithmetic.css

  color-named:
    - include: color-named-deprecated
    - match: '(?x)
        \b
        (?:
          yellowgreen|
          yellow|
          whitesmoke|
          white|
          wheat|
          violet|
          turquoise|
          transparent|
          tomato|
          thistle|
          teal|
          tan|
          steelblue|
          springgreen|
          snow|
          slategrey|
          slategray|
          slateblue|
          skyblue|
          silver|
          sienna|
          seashell|
          seagreen|
          sandybrown|
          salmon|
          saddlebrown|
          royalblue|
          rosybrown|
          red|
          rebeccapurple|
          purple|
          powderblue|
          plum|
          pink|
          peru|
          peachpuff|
          papayawhip|
          palevioletred|
          paleturquoise|
          palegreen|
          palegoldenrod|
          orchid|
          orangered|
          orange|
          olivedrab|
          olive|
          oldlace|
          navy|
          navajowhite|
          moccasin|
          mistyrose|
          mintcream|
          midnightblue|
          mediumvioletred|
          mediumturquoise|
          mediumspringgreen|
          mediumslateblue|
          mediumseagreen|
          mediumpurple|
          mediumorchid|
          mediumblue|
          mediumaquamarine|
          maroon|
          magenta|
          linen|
          limegreen|
          lime|
          lightyellow|
          lightsteelblue|
          lightslategrey|
          lightslategray|
          lightskyblue|
          lightseagreen|
          lightsalmon|
          lightpink|
          lightgrey|
          lightgreen|
          lightgray|
          lightgoldenrodyellow|
          lightcyan|
          lightcoral|
          lightblue|
          lemonchiffon|
          lawngreen|
          lavenderblush|
          lavender|
          khaki|
          ivory|
          indigo|
          indianred|
          hotpink|
          honeydew|
          grey|
          greenyellow|
          green|
          gray|
          goldenrod|
          gold|
          ghostwhite|
          gainsboro|
          fuchsia|
          forestgreen|
          floralwhite|
          firebrick|
          dodgerblue|
          dimgrey|
          dimgray|
          deepskyblue|
          deeppink|
          darkviolet|
          darkturquoise|
          darkslategrey|
          darkslategray|
          darkslateblue|
          darkseagreen|
          darksalmon|
          darkred|
          darkorchid|
          darkorange|
          darkolivegreen|
          darkmagenta|
          darkkhaki|
          darkgrey|
          darkgreen|
          darkgray|
          darkgoldenrod|
          darkcyan|
          darkblue|
          cyan|
          currentcolor|
          crimson|
          cornsilk|
          cornflowerblue|
          coral|
          chocolate|
          chartreuse|
          cadetblue|
          burlywood|
          brown|
          blueviolet|
          blue|
          blanchedalmond|
          black|
          bisque|
          beige|
          azure|
          aquamarine|
          aqua|
          antiquewhite|
          aliceblue
        )
        {{b}}'
      scope: support.constant.color.w3c-color-name.css

  color-named-deprecated:
    - match: '(?x)
        \b
        (?:
          WindowText|
          WindowFrame|
          Window|
          ThreeDShadow|
          ThreeDLightShadow|
          ThreeDHighlight|
          ThreeDFace|
          ThreeDDarkShadow|
          Scrollbar|
          MenuText|
          Menu|
          InfoText|
          InfoBackground|
          InactiveCaptionText|
          InactiveCaption|
          InactiveBorder|
          HighlightText|
          Highlight|
          GrayText|
          CaptionText|
          ButtonText|
          ButtonShadow|
          ButtonHighlight|
          ButtonFace|
          Background|
          AppWorkspace|
          ActiveCaption|
          ActiveBorder
        )
        {{b}}'
      scope: support.constant.color.w3c-color-name.css invalid.deprecated.css

  color-stop:
    - include: color
    - include: percentage
    - include: length

  comment:
    - match: /\*
      push:
        - meta_scope: comment.block.css
        - match: \*/
          pop: true

  common-lig-values:
    - match: '\b(?:no-common-ligatures|common-ligatures){{b}}'
      scope: support.constant.property-value.css

  content-distribution:
    - match: '(?x)
        \b
        (?:
          stretch|
          space-evenly|
          space-between|
          space-around
        )
        {{b}}'
      scope: support.constant.property-value.css

  content-list:
    - match: '\b(?:document-url|contents){{b}}'
      scope: support.constant.property-value.css
    - include: quote
    - include: func-leader
    - include: target
    - include: func-url
    - include: string

  content-position:
    - match: '(?x)
        \b
        (?:
          start|
          right|
          left|
          flex-start|
          flex-end|
          end|
          center
        )
        {{b}}'
      scope: support.constant.property-value.css

  contextual-alt-values:
    - match: '\b(?:no-contextual|contextual){{b}}'
      scope: support.constant.property-value.css

  # NOTE: Do not implement. symbols() is a very specific match, while
  # <identifier> is very nonspecific. Lumping them together will cause
  # mismatches, either because the precedence of symbols() is too low or because
  # the precedence of <identifier> is too high. Instead, just include both these
  # contexts separately wherever <counter-style> is required.
  # counter-style:
  #   - include: func-symbols
  #   - include: identifier

  decibel:
    - include: func-calc
    - match: '(?x)
        (?:
          ({{number}})({{decibel_unit}})|
          ({{zero}})
        )'
      captures:
        1: constant.numeric.css
        2: keyword.other.unit.css
        3: constant.numeric.css

  descriptors-counter-style:
    - include: descriptor-system
    - include: descriptor-negative
    - include: descriptor-suffix-prefix
    - include: descriptor-range
    - include: descriptor-pad
    - include: descriptor-fallback
    - include: descriptor-symbols
    - include: descriptor-additive-symbols
    - include: descriptor-speak-as

  descriptors-font-face:
    - include: descriptor-font-feature-settings
    - include: descriptor-unicode-range
    - include: descriptor-font-variant
    - include: descriptor-font-stretch
    - include: descriptor-font-family
    - include: descriptor-font-weight
    - include: descriptor-font-style
    - include: descriptor-font-src

  descriptor-additive-symbols:
    - match: \b(additive-symbols)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: integer-non-negative
        - include: symbol
    - include: stray-paren-or-semicolon

  descriptor-fallback:
    - match: \b(fallback)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: identifier
    - include: stray-paren-or-semicolon

  descriptor-font-family:
    - match: \b(font-family)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: string
        # Generic font families, like 'serif', are not permitted in the
        # font-family descriptor, only in the font-family property.
        - match: '\b(?:{{generic_font_family}}){{b}}'
          scope: invalid.illegal.font-family.css
        - include: identifier
    - include: stray-paren-or-semicolon

  descriptor-font-feature-settings:
    - match: \b(font-feature-settings)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:on|off|normal){{b}}'
          scope: support.constant.property-value.css
        - include: string
        - include: integer-non-negative
    - include: stray-paren-or-semicolon

  descriptor-font-src:
    - match: \b(src)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: func-format
        - include: func-local
        - include: func-url
    - include: stray-paren-or-semicolon

  descriptor-font-stretch:
    - match: \b(font-stretch)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '(?x)
            \b
            (?:
              ultra-expanded|
              ultra-condensed|
              semi-expanded|
              semi-condensed|
              normal|
              extra-expanded|
              extra-condensed|
              expanded|
              condensed
            )
            {{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  descriptor-font-style:
    - match: \b(font-style)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:oblique|normal|italic){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  descriptor-font-variant:
    - match: \b(font-variant)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: func-swash-styleset-stylistic-ornaments-character-variant-annotation
        - match: '(?x)
            \b
            (?:
              unicase|
              titling-caps|
              super|
              sub|
              small-caps|
              slashed-zero|
              ruby|
              petite-caps|
              ordinal|
              normal|
              none|
              historical-forms|
              all-small-caps|
              all-petite-caps
            )
            {{b}}'
          scope: support.constant.property-value.css
        - include: common-lig-values
        - include: contextual-alt-values
        - include: discretionary-lig-values
        - include: east-asian-variant-values
        - include: east-asian-width-values
        - include: historical-lig-values
        - include: numeric-figure-values
        - include: numeric-spacing-values
        - include: numeric-fraction-values
    - include: stray-paren-or-semicolon

  descriptor-font-weight:
    - match: \b(font-weight)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:normal|bold|[1-9]00){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  descriptor-negative:
    - match: \b(negative)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: symbol
    - include: stray-paren-or-semicolon

  descriptor-pad:
    - match: \b(pad)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:infinite|auto){{b}}'
          scope: support.constant.property-value.css
        - include: integer
        - include: symbol
    - include: stray-paren-or-semicolon

  descriptor-range:
    - match: \b(range)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:infinite|auto){{b}}'
          scope: support.constant.property-value.css
        - include: integer
    - include: stray-paren-or-semicolon

  descriptor-suffix-prefix:
    - match: \b(suffix|prefix)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: symbol
    - include: stray-paren-or-semicolon

  descriptor-speak-as:
    - match: \b(speak-as)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:words|spell-out|numbers|bullets|auto){{b}}'
          scope: support.constant.property-value.css
        - include: identifier
    - include: stray-paren-or-semicolon

  descriptor-symbols:
    - match: \b(symbols)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: symbol
    - include: stray-paren-or-semicolon

  descriptor-system:
    - match: \b(system)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '(?x)
            \b
            (?:
              symbolic|
              numeric|
              fixed|
              extends|
              cyclic|
              alphabetic|
              additive
            )
            {{b}}'
          scope: support.constant.property-value.css
        - include: integer
        - include: identifier
    - include: stray-paren-or-semicolon

  descriptor-viewport-height-width:
    - match: '\b({{optional_min_max_prefix}}(?:width|height))\s*(:)'
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: viewport-length
    - include: stray-paren-or-semicolon

  descriptor-viewport-orientation:
    - match: '\b(orientation)\s*(:)'
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - match: '\b(?:portrait|landscape|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  descriptor-viewport-user-zoom:
    - match: '\b(user-zoom)\s*(:)'
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - match: '\b(?:zoom|fixed){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  descriptor-viewport-zoom:
    - match: '\b({{optional_min_max_prefix}}zoom)\s*(:)'
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - match: '\bauto{{b}}'
          scope: support.constant.property-value.css
        - include: percentage-non-negative
        - include: number-non-negative
    - include: stray-paren-or-semicolon

  descriptor-unicode-range:
    - match: \b(unicode-range)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '{{unicode_range}}'
          scope: constant.numeric.unicode-range.css
    - include: stray-paren-or-semicolon

  discretionary-lig-values:
    - match: '\b(?:no-discretionary-ligatures|discretionary-ligatures){{b}}'
      scope: support.constant.property-value.css

  display-box:
    - match: '\b(?:none|contents){{b}}'
      scope: support.constant.property-value.css

  display-inside:
    - match: '(?x)
        \b
        (?:
          table|
          ruby|
          grid|
          flow-root|
          flow|
          flex
        )
        {{b}}'
      scope: support.constant.property-value.css

  display-internal:
    - match: '(?x)
        \b
        (?:
          table-row-group|
          table-row|
          table-header-group|
          table-footer-group|
          table-column-group|
          table-column|
          table-cell|
          table-caption|
          ruby-text-container|
          ruby-text|
          ruby-base-container|
          ruby-base
        )
        {{b}}'
      scope: support.constant.property-value.css

  display-legacy:
    - match: '(?x)
        \b
        (?:
          inline-table|
          inline-list-item|
          inline-grid|
          inline-flex|
          inline-block
        )
        {{b}}'
      scope: support.constant.property-value.css

  display-listitem:
    - match: '\b(?:list-item|flow-root|flow){{b}}'
      scope: support.constant.property-value.css
    - include: display-outside

  display-outside:
    - match: '\b(?:run-in|inline|block){{b}}'
      scope: support.constant.property-value.css

  east-asian-variant-values:
    - match: '\b(?:traditional|simplified|jis90|jis83|jis78|jis04){{b}}'
      scope: support.constant.property-value.css

  east-asian-width-values:
    - match: '\b(?:proportional-width|full-width){{b}}'
      scope: support.constant.property-value.css

  end-func:
    - match: \)
      scope: punctuation.section.function.end.css
      pop: true

  end-media-feature:
    - match: '(?=\))'
      pop: true

  end-value:
    # end on } if this is the last property-value pair in the block.
    # end on ) if we're inside an @supports condition.  # TODO: is this a good idea?
    - match: ';|(?=[}\)])'
      scope: punctuation.terminator.rule.css
      pop: true

  escape:
    - match: '{{escape}}'
      scope: constant.character.escape.css

  extent-keyword:
    - match: '(?x)
        \b
        (?:
          farthest-side|
          farthest-corner|
          closest-side|
          closest-corner
        )
        {{b}}'
      scope: support.constant.property-value.css

  feature-tag-value:
    - match: '\b(?:on|off){{b}}'
      scope: support.constant.property-value.css
    - include: string
    - include: integer-non-negative

  fill-rule:
    - match: '\b(?:nonzero|evenodd){{b}}'
      scope: support.constant.property-value.css

  fixed-breadth:
    - include: percentage-non-negative
    - include: length-non-negative

  fixed-repeat:
    - include: func-repeat

  fixed-size:
    - include: func-minmax
    - include: fixed-breadth

  flex:
    - match: '(?x)
        (?:
          ({{number}})({{flex_unit}})\b|
          ({{zero}})
        )'
      captures:
        1: constant.numeric.css
        2: keyword.other.unit.css
        3: constant.numeric.css

  flex-direction:
    - match: '\b(?:row-reverse|row|column-reverse|column){{b}}'
      scope: support.constant.property-value.css

  flex-non-negative:
    - match: '(?x)
        (?:
          ({{number_non_neg}})({{flex_unit}})\b|
          ({{zero}})
        )'
      captures:
        1: constant.numeric.css
        2: keyword.other.unit.css
        3: constant.numeric.css

  flex-wrap:
    - match: '\b(?:wrap-reverse|wrap|nowrap){{b}}'
      scope: support.constant.property-value.css

  font-feature-value-block:
    - match: '{'
      scope: punctuation.section.font-feature-value-block.begin.css
      push:
        - match: '(?=})'
          pop: true
        - include: font-feature-value-definition

  font-feature-value-definition:
    - match: '\b({{identifier}})\s*(:)'
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: integer

  # This matches a feature_type (e.g. @swash) and a feature_value_block.
  #     |-----matches-------|
  #     @swash { ornate: 1; }
  font-feature-value-rule:
    - match: '(?x)
        (@)
        (?:
          swash|
          stylistic|
          styleset|
          ornaments|
          character-variant|
          annotation
        )
        {{b}}'
      captures:
        0: keyword.control.at-rule.feature-type.css
        1: punctuation.definition.keyword.css
      push:
        - match: '}'
          scope: punctuation.section.font-feature-value-block.end.css
          pop: true
        - include: font-feature-value-block
    - include: stray-brace

  font-family-generic:
    - match: '(?x)
        \b
        (?:
          serif|
          sans-serif|
          monospace|
          fantasy|
          cursive
        )
        {{b}}'
      scope: support.constant.property-value.css

  font-family-name:
    - include: string
    - include: identifier

  frequency:
    - include: func-calc
    - match: '(?x)
        (?:
          ({{number}})({{frequency_unit}})\b|
          ({{zero}})
        )'
      captures:
        1: constant.numeric.css
        2: keyword.other.unit.css
        3: constant.numeric.css

  func-attr:
    - match: \b(attr)(\()
      captures:
        1: support.function.attr.css
        2: punctuation.section.function.begin.css
      push:
        - meta_content_scope: meta.function.attr.css
        - include: end-func
        - include: func-var
        - include: type-or-unit
        - match: '{{wq_name}}'
          captures:
            1: entity.other.attribute-name.namespace.css
            2: entity.other.attribute-name.namespace.wildcard.css
            3: punctuation.separator.namespace.css
            4: entity.other.attribute-name.css
            5: entity.other.attribute-name.wildcard.css
        - include: attr-fallback

  func-blenda:
    - match: \b(blenda?)(\()
      captures:
        1: support.function.blenda.css
        2: punctuation.section.function.begin.css
      push:
        - include: end-func
        - include: func-var
        - match: '\b(?:rgb|hwb|hsl){{b}}'
        - include: percentage
        - include: color

  func-blur:
    - match: \b(blur)(\()
      captures:
        1: support.function.blur.css
        2: punctuation.section.function.begin.css
      push:
        - meta_content_scope: meta.function.blur.css
        - include: end-func
        - include: func-var
        - include: length-non-negative

  func-calc:
    - match: \b(calc)(\()
      captures:
        1: support.function.calc.css
        2: punctuation.section.function.begin.css
      push:
        - include: end-func
        - include: func-var
        - include: length
        - include: frequency
        - include: angle
        - include: time
        - include: percentage
        - include: number
        - include: arithmetic-operator

  func-color:
    - match: \b(color)(\()
      captures:
        1: support.function.color.css
        2: punctuation.section.function.begin.css
      push:
        - include: end-func
        - include: func-var
        - include: angle
        - include: number
        - include: color-adjuster
        - include: color

  func-color-adjuster-rgb:
    - match: \b(rgb)(\()
      captures:
        1: support.function.color-adjuster-rgb.css
        2: punctuation.section.function.begin.css
      push:
        - include: end-func
        - include: func-var
        - include: percentage
        - include: hex-color
        - include: number
        - include: color-adjuster-operator

  func-content:
    - match: \b(content)(\()
      captures:
        1: support.function.content.css
        2: punctuation.section.function.begin.css
      push:
        - meta_content_scope: meta.function.content.css
        - include: end-func
        - include: func-var
        - match: '\b(?:text|marker|first-letter|before|after){{b}}'
          scope: support.constant.property-value.css

  func-counter:
    - match: \b(counter)(\()
      captures:
        1: support.function.counter.css
        2: punctuation.section.function.begin.css
      push:
        - meta_content_scope: meta.function.counter.css
        - include: end-func
        - include: func-var
        - include: func-symbols
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: identifier

  func-counters:
    - match: \b(counters)(\()
      captures:
        1: support.function.counters.css
        2: punctuation.section.function.begin.css
      push:
        - meta_content_scope: meta.function.counters.css
        - include: end-func
        - include: func-var
        - include: func-symbols
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: string
        - include: identifier

  func-cross-fade:
    - match: \b(cross-fade)(\()
      captures:
        1: support.function.cross-fade.css
        2: punctuation.section.function.begin.css
      push:
        - include: end-func
        - include: func-var
        - include: image
        - include: color
        - include: percentage-zero-to-100

  func-cubic-bezier:
    - match: \b(cubic-bezier)(\()
      captures:
        1: support.function.cubic-bezier.css
        2: punctuation.section.function.begin.css
      push:
        - include: end-func
        - include: func-var
        - include: number-zero-to-one

  func-device-cmyk:
    - match: \b(device-cmyk)(\()
      captures:
        1: support.function.device-cmyk.css
        2: punctuation.section.function.begin.css
      push:
        - include: end-func
        - include: func-var
        - include: percentage-zero-to-100
        - include: number-zero-to-one
        - include: color

  func-drop-shadow:
    - match: \b(drop-shadow)(\()
      captures:
        1: support.function.drop-shadow.css
        2: punctuation.section.function.begin.css
      push:
        - meta_content_scope: meta.function.drop-shadow.css
        - include: end-func
        - include: func-var
        - include: color
        - include: length

  func-element:
    - match: \b(element)(\()
      captures:
        1: support.function.element.css
        2: punctuation.section.function.begin.css
      push:
        - include: end-func
        - include: func-var
        - match: '\b(?:start|last|first-except|first){{b}}'
          scope: support.constant.property-value.css
        - include: identifier

  func-ellipse-circle:
    - match: \b(ellipse|circle)(\()
      captures:
        1: support.function.ellipse-circle.css
        2: punctuation.section.function.begin.css
      push:
        - include: end-func
        - include: func-var
        - match: '\bat{{b}}'
          scope: support.constant.property-value.css
        - include: shape-radius
        - include: position

  func-filter:
    - match: \b(sepia|saturate|opacity|invert|grayscale|contrast|brightness)(\()
      captures:
        1: support.function.filter.css
        2: punctuation.section.function.begin.css
      push:
        - meta_content_scope: meta.function.filter.css
        - include: end-func
        - include: func-var
        - include: percentage-non-negative
        - include: number-non-negative

  func-fit-content:
    - match: \b(fit-content)(\()
      captures:
        1: support.function.fit-content.css
        2: punctuation.section.function.begin.css
      push:
        - meta_content_scope: meta.function.fit-content.css
        - include: end-func
        - include: func-var
        - include: percentage
        - include: length

  func-format:
    - match: \b(format)(\()
      captures:
        1: support.function.format.css
        2: punctuation.section.function.begin.css
      push:
        - include: end-func
        - include: func-var
        - include: string

  func-gray:
    - match: \b(gray)(\()
      captures:
        1: support.function.gray.css
        2: punctuation.section.function.begin.css
      push:
        - include: end-func
        - include: func-var
        - include: percentage-zero-to-100
        - include: number

  func-hsla:
    - match: \b(hsla?)(\()
      captures:
        1: support.function.hsla.css
        2: punctuation.section.function.begin.css
      push:
        - include: end-func
        - include: func-var
        - include: angle
        - include: percentage-zero-to-100
        - include: number  # matches part of <hue> and <alpha-value>

  func-hue-rotate:
    - match: \b(hue-rotate)(\()
      captures:
        1: support.function.hue-rotate.css
        2: punctuation.section.function.begin.css
      push:
        - meta_content_scope: meta.function.hue-rotate.css
        - include: end-func
        - include: func-var
        - include: angle

  func-hwb:
    - match: \b(hwb)(\()
      captures:
        1: support.function.hwb.css
        2: punctuation.section.function.begin.css
      push:
        - include: end-func
        - include: func-var
        - include: angle
        - include: percentage-zero-to-100
        - include: number  # matches part of <hue> and <alpha-value>

  func-image:
    - match: \b(image)(\()
      captures:
        1: support.function.image.css
        2: punctuation.section.function.begin.css
      push:
        - include: end-func
        - include: func-var
        - include: image
        - include: color
        - include: string

  func-image-set:
    - match: \b(image-set)(\()
      captures:
        1: support.function.image-set.css
        2: punctuation.section.function.begin.css
      push:
        - include: end-func
        - include: func-var
        - include: image
        - include: resolution
        - include: string

  func-inset:
    - match: \b(inset)(\()
      captures:
        1: support.function.inset.css
        2: punctuation.section.function.begin.css
      push:
        - include: end-func
        - include: func-var
        - match: '\bround{{b}}'
          scope: support.constant.property-value.css
        - include: shape-arg
        - match: '\/'
          scope: keyword.operator.arithmetic.css

  func-leader:
    - match: \b(leader)(\()
      captures:
        1: support.function.leader.css
        2: punctuation.section.function.begin.css
      push:
        - include: end-func
        - include: func-var
        - match: '\b(?:space|solid|dotted){{b}}'
          scope: support.constant.property-value.css
        - include: string

  func-linear-gradient:
    - match: \b((?:repeating-)?linear-gradient)(\()
      captures:
        1: support.function.linear-gradient.css
        2: punctuation.section.function.begin.css
      push:
        - include: end-func
        - include: func-var
        - include: side-or-corner
        - match: '\bto{{b}}'
          scope: support.constant.property-value.css
        - include: angle
        - include: color-stop

  func-local:
    - match: \b(local)(\()
      captures:
        1: support.function.local.css
        2: punctuation.section.function.begin.css
      push:
        - include: end-func
        - include: func-var
        - include: string
        - include: identifier

  func-minmax:
    - match: \b(minmax)(\()
      captures:
        1: support.function.minmax.css
        2: punctuation.section.function.begin.css
      push:
        - meta_content_scope: meta.function.minmax.css
        - include: end-func
        - include: func-var
        - match: '\b(?:min-content|max-content|auto){{b}}'
          scope: support.constant.property-value.css
        - include: flex-non-negative
        - include: percentage-non-negative
        - include: length-non-negative

  func-polygon:
    - match: \b(polygon)(\()
      captures:
        1: support.function.polygon.css
        2: punctuation.section.function.begin.css
      push:
        - include: end-func
        - include: func-var
        - include: fill-rule
        - include: shape-arg

  func-radial-gradient:
    - match: \b((?:repeating-)?radial-gradient)(\()
      captures:
        1: support.function.radial-gradient.css
        2: punctuation.section.function.begin.css
      push:
        - include: end-func
        - include: func-var
        - match: '\b(?:ellipse|circle|at){{b}}'
          scope: support.constant.property-value.css
        - include: size
        - include: position
        - include: color-stop

  func-red-green-blue-alpha-a:
    - match: \b(red|green|blue|alpha|a)(\()
      captures:
        1: support.function.red-green-blue-alpha-a.css
        2: punctuation.section.function.begin.css
      push:
        - include: end-func
        - include: func-var
        - include: percentage
        - include: number
        - include: color-adjuster-operator

  func-repeat:
    - match: \b(repeat)(\()
      captures:
        1: support.function.repeat.css
        2: punctuation.section.function.begin.css
      push:
        - meta_content_scope: meta.function.repeat.css
        - include: end-func
        - include: func-var
        - include: line-names
        - include: track-size
        - match: '\b(?:auto-fit|auto-fill){{b}}'
          scope: support.constant.property-value.css
        - include: integer-positive

  func-rgba:
    - match: \b(rgba?)(\()
      captures:
        1: support.function.rgba.css
        2: punctuation.section.function.begin.css
      push:
        - include: end-func
        - include: func-var
        - include: rgb-component  # matches <alpha-value> too

  func-select:
    - match: \b(select)(\()
      captures:
        1: support.function.select.css
        2: punctuation.section.function.begin.css
      push:
        - meta_content_scope: meta.function.select.css
        - include: end-func
        - include: func-var
        - include: selector-simple-compound

  func-snap-block:
    - match: \b(snap-block)(\()
      captures:
        1: support.function.snap-block.css
        2: punctuation.section.function.begin.css
      push:
        - meta_content_scope: meta.function.snap-block.css
        - include: end-func
        - include: func-var
        - match: '\b(?:start|near|end){{b}}'
          scope: support.constant.property-value.css
        - include: length

  func-snap-inline:
    - match: \b(snap-inline)(\()
      captures:
        1: support.function.snap-inline.css
        2: punctuation.section.function.begin.css
      push:
        - meta_content_scope: meta.function.snap-inline.css
        - include: end-func
        - include: func-var
        - match: '\b(?:right|near|left){{b}}'
          scope: support.constant.property-value.css
        - include: length

  func-steps:
    - match: \b(steps)(\()
      captures:
        1: support.function.steps.css
        2: punctuation.section.function.begin.css
      push:
        - include: end-func
        - include: func-var
        - match: '\b(?:start|end){{b}}'
          scope: support.constant.property-value.css
        - include: integer-positive

  func-string:
    - match: \b(string)(\()
      captures:
        1: support.function.string.css
        2: punctuation.section.function.begin.css
      push:
        - meta_content_scope: meta.function.string.css
        - include: end-func
        - include: func-var
        - match: '\b(?:start|last|first-except|first){{b}}'
          scope: support.constant.property-value.css
        - include: identifier

  func-swash-styleset-stylistic-ornaments-character-variant-annotation:
    - match: \b(swash|stylistic|styleset|ornaments|character-variant|annotation)(\()
      captures:
        1: support.function.swash-styleset-stylistic-ornaments-character-variant-annotation.css
        2: punctuation.section.function.begin.css
      push:
        - include: end-func
        - include: func-var
        - include: identifier
        - include: integer-non-negative

  func-symbols:
    - match: \b(symbols)(\()
      captures:
        1: support.function.symbols.css
        2: punctuation.section.function.begin.css
      push:
        - include: end-func
        - include: func-var
        - include: image
        - match: '(?x)
            \b
            (?:
              symbolic|
              numeric|
              fixed|
              cyclic|
              alphabetic
            )
            {{b}}'
          scope: support.constant.property-value.css
        - include: string

  # This context matches target-counter() too.
  func-target-counters:
    - match: \b(target-counters?)(\()
      captures:
        1: support.function.target-counters.css
        2: punctuation.section.function.begin.css
      push:
        - include: end-func
        - include: func-var
        - include: func-symbols
        - include: func-url
        - include: string
        - include: identifier

  func-target-text:
    - match: \b(target-text)(\()
      captures:
        1: support.function.target-text.css
        2: punctuation.section.function.begin.css
      push:
        - include: end-func
        - include: func-var
        - include: func-url
        - match: '(?x)
            \b
            (?:
              first-letter|
              content|
              before|
              after
            )
            {{b}}'
          scope: support.constant.property-value.css
        - include: string

  func-tint-shade-contrast:
    - match: \b(tint|shade|contrast)(\()
      captures:
        1: support.function.func-tint-shade-contrast.css
        2: punctuation.section.function.begin.css
      push:
        - include: end-func
        - include: func-var
        - include: percentage

  func-url:
    - match: \b(url)(\()
      captures:
        1: support.function.url.css
        2: punctuation.section.function.begin.css
      push:
        - include: end-func
        - include: func-var
        - include: string

  func-var:
    - match: \b(var)(\()
      captures:
        1: support.function.var.css
        2: punctuation.section.function.begin.css
      push:
        - include: end-func
        - include: func-var
        - match: ','
          push:
            - match: '(?=[,)])'
              pop: true
            - include: any-value  # <declaration-value>
        - match: '{{custom_property_name}}'
          scope: support.constant.property-name.custom.css

  func-whiteness-saturation-lightness-hue-blackness:
    - match: \b(whiteness|w|saturation|s|lightness|l|hue|h|blackness|b)(\()
      captures:
        1: support.function.whiteness-saturation-lightness-hue-blackness.css
        2: punctuation.section.function.begin.css
      push:
        - include: end-func
        - include: func-var
        - include: percentage
        - include: color-adjuster-operator

  geometry-box:
    - match: '\b(?:view-box|stroke-box|fill-box){{b}}'
      scope: support.constant.property-value.css
    - include: shape-box

  gradient:
    - include: func-radial-gradient
    - include: func-linear-gradient

  grid-line:
    - match: '\b(?:span|auto){{b}}'
      scope: support.constant.property-value.css
    - include: integer
    - match: '\/'
      scope: keyword.operator.arithmetic.css
    - include: identifier

  hex-color:
    - match: '{{hex_color}}'
      captures:
        0: constant.other.color.rgb-value.css
        1: punctuation.definition.constant.css

  historical-lig-values:
    - match: '\b(?:no-historical-ligatures|historical-ligatures){{b}}'
      scope: support.constant.property-value.css

  identifier:
    - match: '{{identifier}}'
      scope: string.unquoted.identifier.css

  image:
    - include: gradient
    - include: func-cross-fade
    - include: func-element
    - include: func-image-set
    - include: func-image
    - include: func-url

  integer:
    - include: func-calc
    - match: '{{integer}}'
      scope: constant.numeric.css

  integer-non-negative:
    - include: func-calc
    - match: '{{integer_non_neg}}'
      scope: constant.numeric.css

  integer-positive:
    - include: func-calc
    - match: '{{integer_pos}}'
      scope: constant.numeric.css

  isolation-mode:
    - match: '\b(?:isolate|auto){{b}}'
      scope: support.constant.property-value.css

  # This is based on the rule context.
  keyframes-block:
    - match: '(?=[fromt\d%])'  # to|from|<percentage>
      push:
        - match: '}'
          scope: punctuation.section.keyframes-declaration-list.end.css
          pop: true
        - include: keyframes-declaration-list
        - include: selector-keyframes
    - include: stray-brace

  keyframes-declaration-list:
    - match: '{'
      scope: punctuation.section.keyframes-declaration-list.begin.css
      push:
        - meta_scope: meta.keyframes-declaration-list.css
        - match: '(?=})'
          pop: true
        - include: properties

  keyframes-name:
    - include: string
    - include: identifier

  knockout-offset:
    - include: percentage
    - include: length
    - include: number

  knockout-shape:
    - match: '\b(?:triangle|rectangle|inverted|ellipse|circle){{b}}'
      scope: support.constant.property-value.css
    - include: percentage
    - include: length
    - include: number

  length:
    - include: func-calc
    - match: '(?x)
        (?:
          ({{number}})({{length_unit}})\b|
          ({{zero}})
        )'
      captures:
        1: constant.numeric.css
        2: keyword.other.unit.css
        3: constant.numeric.css

  length-non-negative:
    - include: func-calc
    - match: '(?x)
        (?:
          ({{number_non_neg}})({{length_unit}})\b|
          ({{zero}})
        )'
      captures:
        1: constant.numeric.css
        2: keyword.other.unit.css
        3: constant.numeric.css

  length-positive:
    - include: func-calc
    - match: '(?x)
        (?:
          ({{number_pos}})({{length_unit}})\b|
          ({{zero}})
        )'
      captures:
        1: constant.numeric.css
        2: keyword.other.unit.css
        3: constant.numeric.css

  line-names:
    - match: '\['
      scope: punctuation.section.line-names.begin.css
      push:
        - match: '\]'
          scope: punctuation.section.line-names.end.css
          pop: true
        - include: identifier

  line-style:
    - match: '(?x)
        \b
        (?:
          solid|
          ridge|
          outset|
          none|
          inset|
          hidden|
          groove|
          double|
          dotted|
          dashed
        )
        {{b}}'
      scope: support.constant.property-value.css

  line-width:
    - match: '\b(?:thin|thick|medium){{b}}'
      scope: support.constant.property-value.css
    - include: length-non-negative

  marker-gap:
    - include: percentage
    - include: length
    - include: number

  marker-ref:
    - include: func-select
    - include: func-url
    - match: '\bchild{{b}}'
      scope: support.constant.property-value.css

  media-feature:
    - match: \(
      scope: punctuation.section.media-feature.begin.css
      push:
        # Note that this is different from media-feature-end, which matches
        # just before the closing paren.
        - match: \)
          scope: punctuation.section.media-feature.end.css
          pop: true
        - include: media-feature-deprecated
        - include: media-feature-custom  # TODO: correct precedence?
        - include: media-feature-aspect-ratio
        - include: media-feature-color-gamut
        - include: media-feature-grid
        - include: media-feature-hover
        - include: media-feature-inverted-colors
        - include: media-feature-monochrome-color-index
        - include: media-feature-width-height
        - include: media-feature-light-level
        - include: media-feature-orientation
        - include: media-feature-overflow-block
        - include: media-feature-overflow-inline
        - include: media-feature-pointer
        - include: media-feature-resolution
        - include: media-feature-scan
        - include: media-feature-scripting
        - include: media-feature-update
        - include: media-feature-range-operator
        # Match values and comparison operators that appear at the start.
        #  |------|
        # (480px <= width <= 640px)
        - include: ratio
        - include: resolution
        - include: length-non-negative
        - include: integer-non-negative
    - include: stray-paren

  # e.g. (aspect-ratio: 16/9)
  media-feature-aspect-ratio:
    - match: '(?x)
        \b
        (
          {{optional_min_max_prefix}}
          aspect-ratio
        )\s*(:)'
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-media-feature
        - include: value-css-wide
        - include: ratio
        - include: media-feature-range-operator

  media-feature-color-gamut:
    - match: \b(color-gamut)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-media-feature
        - include: value-css-wide
        - match: \b(?:srgb|rec2020|p3)\b
          scope: support.constant.property-value.css

  media-feature-custom:
    - match: '\-\-{{identifier}}'
      scope: support.constant.custom-media-query-name.css

  media-feature-deprecated:
    - match: '(?x)
        (
          {{optional_min_max_prefix}}
          device\-(?:width|height|aspect-ratio)
        )
        \s*(:)?'
      captures:
        1: support.constant.property-name.css invalid.deprecated.css
        2: punctuation.separator.key-value.css

  media-feature-grid:
    - match: \b(grid)\s*(:)?
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-media-feature
        - include: value-css-wide
        - match: \b(?:0|1)\b
          scope: support.constant.property-value.css

  media-feature-hover:
    - match: \b((?:any-)?hover)\s*(:)?
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-media-feature
        - include: value-css-wide
        - match: '\b(?:on-demand|none|hover){{b}}'
          scope: support.constant.property-value.css

  media-feature-inverted-colors:
    - match: \b(inverted-colors)\s*(:)?
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-media-feature
        - include: value-css-wide
        - match: '\b(?:none|inverted){{b}}'
          scope: support.constant.property-value.css

  media-feature-light-level:
    - match: '\b(light-level)\s*(:)'
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-media-feature
        - include: value-css-wide
        - match: washed|normal|dim
          scope: support.constant.property-value.css

  media-feature-monochrome-color-index:
    - match: '(?x)
        \b
        (
          {{optional_min_max_prefix}}
          (?:monochrome|color-index|color)
        )\s*(:)?
        {{not_followed_by_dash}}'
        # {{not_followed_by_dash}} prevents "color" from matching misspelled
        # "color-index" or "color-gamut". {{b}} won't work because ':' isn't a
        # word boundary.
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-media-feature
        - include: value-css-wide
        - include: integer-non-negative
        - include: media-feature-range-operator

  media-feature-orientation:
    - match: \b(orientation)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-media-feature
        - include: value-css-wide
        - match: '\b(?:portrait|landscape){{b}}'
          scope: support.constant.property-value.css

  media-feature-overflow-block:
    - match: \b(overflow-block)\s*(:)?
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-media-feature
        - include: value-css-wide
        - match: '\b(?:scroll|paged|optional-paged|none){{b}}'
          scope: support.constant.property-value.css

  media-feature-overflow-inline:
    - match: \b(overflow-inline)\s*(:)?
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-media-feature
        - include: value-css-wide
        - match: '\b(?:scroll|none){{b}}'
          scope: support.constant.property-value.css

  media-feature-pointer:
    - match: '\b((?:any-)?pointer)\s*(:)?{{not_followed_by_dash}}'
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-media-feature
        - include: value-css-wide
        - match: '\b(?:none|fine|coarse){{b}}'
          scope: support.constant.property-value.css

  media-feature-range-operator:
    - match: '(?:[<>]=?|=)(?=[\s\w])'
      scope: keyword.operator.arithmetic.css

  # e.g. (min-resolution: 300dpi)
  media-feature-resolution:
    - match: '(?x)
        \b
        (
          {{optional_min_max_prefix}}
          resolution
        )\s*(:)?
        {{not_followed_by_dash}}'
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-media-feature
        - include: value-css-wide
        - include: resolution
        - include: media-feature-range-operator

  media-feature-scan:
    - match: '\b(scan)\s*(:)?{{not_followed_by_dash}}'
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-media-feature
        - include: value-css-wide
        - match: '\b(?:progressive|interlace){{b}}'
          scope: support.constant.property-value.css

  media-feature-scripting:
    - match: '\b(scripting)\s*(:)?{{not_followed_by_dash}}'
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-media-feature
        - include: value-css-wide
        - match: '\b(?:none|initial-only|enabled){{b}}'
          scope: support.constant.property-value.css

  media-feature-update:
    - match: '\b(update)\s*(:)?{{not_followed_by_dash}}'
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-media-feature
        - include: value-css-wide
        - match: '\b(?:normal|none|slow){{b}}'
          scope: support.constant.property-value.css

  # may appear as "(width: 480px)" or "(width >= 480px)"
  media-feature-width-height:
    - match: '(?x)
        \b
        (
          {{optional_min_max_prefix}}
          (?:width|height)
        )\s*(:)?
        {{not_followed_by_dash}}'
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-media-feature
        - include: value-css-wide
        - include: length-non-negative
        - include: media-feature-range-operator

  # This is used by the at-media and at-import contexts.
  media-query-list:
    - match: '\band{{b}}'
      scope: keyword.operator.logic.media.css
    - include: media-feature
    - include: media-type

  media-type:
    - include: media-type-deprecated
    - match: (?:(only|not)\s+)?(speech|screen|print|all)
      captures:
        1: keyword.operator.logic.media.css
        2: support.constant.media.css

  media-type-deprecated:
    - match: '\b(?:tv|tty|reader|projection|handheld|embossed|braille|aural){{b}}'
      scope: support.constant.media.css invalid.deprecated.css

  nestable-at-rules:
    - include: at-font-feature-values
    - include: at-counter-style
    - include: at-font-face
    - include: at-keyframes
    - include: at-viewport
    - include: at-supports
    - include: at-media
    - include: at-page

  number:
    - include: func-calc
    - match: '{{number}}'
      scope: constant.numeric.css

  number-non-negative:
    - include: func-calc
    - match: '{{number_non_neg}}'
      scope: constant.numeric.css

  number-zero-to-one:
    - include: func-calc
    - match: '{{number_zero_to_one}}'
      scope: constant.numeric.css

  number-zero-to-255:
    - include: func-calc
    - match: '{{number_zero_to_255}}'
      scope: constant.numeric.css

  numeric-figure-values:
    - match: '\b(?:oldstyle-nums|lining-nums){{b}}'
      scope: support.constant.property-value.css

  numeric-fraction-values:
    - match: '\b(?:stacked-fractions|diagonal-fractions){{b}}'
      scope: support.constant.property-value.css

  numeric-spacing-values:
    - match: '\b(?:tabular-nums|proportional-nums){{b}}'
      scope: support.constant.property-value.css

  overflow-position:
    - match: '\b(?:un)?safe{{b}}'
      scope: support.constant.property-value.css

  page-margin-box:
    - match: '(?x)
        (@)
        (?:
          top-right-corner|
          top-right|
          top-left-corner|
          top-left|
          top-center|
          right-top|
          right-middle|
          right-bottom|
          left-top|
          left-middle|
          left-bottom|
          bottom-right-corner|
          bottom-right|
          bottom-left-corner|
          bottom-left|
          bottom-center
        )
        {{b}}'
      captures:
        0: keyword.control.at-rule.page-margin-box.css
        1: punctuation.definition.keyword.css
      push:
        - match: '}'
          scope: punctuation.section.page-margin-at-rule.end.css
          pop: true
        - match: '{'
          scope: punctuation.section.page-margin-at-rule.begin.css
          push:
            - match: '(?=})'
              pop: true
            - include: properties
    - include: stray-brace

  percentage:
    - include: func-calc
    - match: '(?x)
        (?:
          ({{number}})({{percentage_unit}})|
          ({{zero}})
        )'
      captures:
        1: constant.numeric.css
        2: keyword.other.unit.css
        3: constant.numeric.css

  percentage-non-negative:
    - include: func-calc
    - match: '(?x)
        (?:
          ({{number_non_neg}})({{percentage_unit}})|
          ({{zero}})
        )'
      captures:
        1: constant.numeric.css
        2: keyword.other.unit.css
        3: constant.numeric.css

  percentage-zero-to-100:
    - include: func-calc
    - match: '(?x)
        (?:
          ({{number_zero_to_100}})({{percentage_unit}})|
          ({{zero}})
        )'
      captures:
        1: constant.numeric.css
        2: keyword.other.unit.css
        3: constant.numeric.css

  position:
    - match: '\b(?:top|right|left|center|bottom){{b}}'
      scope: support.constant.property-value.css
    - include: percentage
    - include: length

  properties:
    - include: property-deprecated
    # TODO: sort properties in reverse alphabetical order
    - include: property-align-content
    - include: property-align-items
    - include: property-align-self
    - include: property-alignment-baseline
    - include: property-all
    - include: property-animation-delay
    - include: property-animation-direction
    - include: property-animation-duration
    - include: property-animation-fill-mode
    - include: property-animation-iteration-count
    - include: property-animation-name
    - include: property-animation-play-state
    - include: property-animation-timing-function
    - include: property-animation
    - include: property-appearance
    - include: property-backface-visibility
    - include: property-background-attachment
    - include: property-background-blend-mode
    - include: property-background-clip
    - include: property-background-color
    - include: property-background-image
    - include: property-background-origin
    - include: property-background-position
    - include: property-background-repeat
    - include: property-background-size
    - include: property-background
    - include: property-baseline-shift
    - include: property-bookmark-label
    - include: property-bookmark-level
    - include: property-bookmark-state
    - include: property-border-top-right-left-bottom
    - include: property-border-color
    - include: property-border-radius
    - include: property-border-style
    - include: property-border-width
    - include: property-border-boundary
    - include: property-border-image-source
    - include: property-border-image-slice
    - include: property-border-image-width
    - include: property-border-image-outset
    - include: property-border-image-repeat
    - include: property-border-image
    - include: property-border
    - include: property-box-decoration-break
    - include: property-box-shadow
    - include: property-box-sizing
    - include: property-box-snap
    - include: property-box-suppress
    - include: property-break-before-after
    - include: property-break-inside
    # - include: property-caret-color  # TODO: enable when <caret-color> is defined in CSS Basic User Interface Module Level 4
    - include: property-caret-shape
    - include: property-caret
    - include: property-chains
    - include: property-clear
    - include: property-clip-path
    - include: property-clip-rule
    - include: property-color
    - include: property-color-interpolation-filters
    - include: property-columns
    - include: property-column-count
    - include: property-column-fill
    - include: property-column-gap
    - include: property-column-rule
    - include: property-column-rule-color
    - include: property-column-rule-style
    - include: property-column-rule-width
    - include: property-column-span
    - include: property-column-width
    - include: property-content
    - include: property-continue
    - include: property-counter-set-reset-increment
    - include: property-cue-before-after
    - include: property-cursor
    - include: property-direction
    - include: property-display
    - include: property-dominant-baseline
    - include: property-filter
    - include: property-flex
    - include: property-flex-basis
    - include: property-flex-direction
    - include: property-flex-flow
    - include: property-flex-shrink-grow
    - include: property-flex-wrap
    - include: property-float
    - include: property-float-defer
    - include: property-float-offset
    - include: property-float-reference
    - include: property-flood-color
    - include: property-flood-opacity
    - include: property-flow
    - include: property-flow-from
    - include: property-flow-into
    - include: property-font
    - include: property-font-family
    - include: property-font-feature-settings
    - include: property-font-kerning
    - include: property-font-language-override
    - include: property-font-size
    - include: property-font-size-adjust
    - include: property-font-stretch
    - include: property-font-style
    - include: property-font-variant
    - include: property-font-variant-alternates
    - include: property-font-variant-caps
    - include: property-font-variant-east-asian
    - include: property-font-variant-ligatures
    - include: property-font-variant-numeric
    - include: property-font-variant-position
    - include: property-font-weight
    - include: property-footnote-display
    - include: property-footnote-policy
    - include: property-grid-row-column-area
    - include: property-grid-row-column-gap
    - include: property-grid-auto-rows-columns
    - include: property-grid-auto-flow
    - include: property-grid-template-areas
    - include: property-grid-template-rows-columns
    - include: property-grid-template
    - include: property-hanging-punctuation
    - include: property-height
    - include: property-hyphenate-character
    - include: property-hyphenate-limit-chars
    - include: property-hyphenate-limit-last
    - include: property-hyphenate-limit-lines
    - include: property-hyphenate-limit-zone
    - include: property-hyphens
    - include: property-image-orientation
    - include: property-image-rendering
    - include: property-image-resolution
    - include: property-initial-letter-align
    - include: property-initial-letter-wrap
    - include: property-initial-letter
    - include: property-isolation
    - include: property-justify-content
    - include: property-justify-items
    - include: property-justify-self
    - include: property-letter-spacing
    - include: property-lighting-color
    - include: property-line-break
    - include: property-line-grid
    - include: property-line-height
    - include: property-line-snap
    - include: property-list-style-image
    - include: property-list-style-position
    - include: property-list-style-type
    - include: property-list-style
    - include: property-margin
    - include: property-marker-knockout
    - include: property-marker-pattern
    - include: property-marker-start-segment-mid-end
    - include: property-marker-side
    - include: property-marker



    - include: property-top-right-left-bottom
    - include: property-grid



    # TODO: add rules for matching property/value pairs here
    - include: property-custom

  # align-content is defined in two specs:
  #     CSS Box Alignment Module Level 3
  #     CSS Flexible Box Layout Module Level 1 (subset of Box Alignment Level 3)
  property-align-content:
    - match: \b(align-content)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '\bnormal{{b}}'
          scope: support.constant.property-value.css
        - include: baseline-position
        - include: content-distribution
        - include: overflow-position
        - include: content-position
    - include: stray-paren-or-semicolon

  # align-items is defined in two specs:
  #     CSS Box Alignment Module Level 3
  #     CSS Flexible Box Layout Module Level 1 (subset of Box Alignment Level 3)
  property-align-items:
    - match: \b(align-items)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:stretch|normal){{b}}'
          scope: support.constant.property-value.css
        - include: baseline-position
        - include: overflow-position
        - include: self-position
    - include: stray-paren-or-semicolon

  # align-self is defined in two specs:
  #     CSS Box Alignment Module Level 3
  #     CSS Flexible Box Layout Module Level 1 (subset of Box Alignment Level 3)
  property-align-self:
    - match: \b(align-self)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:stretch|normal|auto){{b}}'
          scope: support.constant.property-value.css
        - include: baseline-position
        - include: overflow-position
        - include: self-position
    - include: stray-paren-or-semicolon

  # CSS Inline Layout Module Level 3
  property-alignment-baseline:
    - match: \b(alignment-baseline)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '(?x)
            \b
            (?:
              top|
              text-top|
              text-bottom|
              middle|
              mathematical|
              ideographic|
              central|
              center|
              bottom|
              baseline|
              alphabetic
            )
            {{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Cascading and Inheritance Level 4
  property-all:
    - match: \b(all)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
    - include: stray-paren-or-semicolon

  # CSS Animations Level 1
  property-animation:
    - match: \b(animation)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: single-animation-play-state
        - include: single-animation-fill-mode
        - include: single-animation-direction
        - include: single-timing-function
        - include: time
        - include: single-animation-iteration-count
        - include: single-animation-name
    - include: stray-paren-or-semicolon

  # CSS Animations Level 2
  property-animation-composition:
    - match: \b(animation-composition)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: single-animation-composition
    - include: stray-paren-or-semicolon

  # CSS Animations Level 1
  property-animation-delay:
    - match: \b(animation-delay)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: time
    - include: stray-paren-or-semicolon

  # CSS Animations Level 1
  property-animation-direction:
    - match: \b(animation-direction)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: single-animation-direction
    - include: stray-paren-or-semicolon

  # CSS Animations Level 1
  property-animation-duration:
    - match: \b(animation-duration)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: time
    - include: stray-paren-or-semicolon

  # CSS Animations Level 1
  property-animation-fill-mode:
    - match: \b(animation-fill-mode)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: single-animation-fill-mode
    - include: stray-paren-or-semicolon

  # CSS Animations Level 1
  property-animation-iteration-count:
    - match: \b(animation-iteration-count)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: single-animation-iteration-count
    - include: stray-paren-or-semicolon

  # CSS Animations Level 1
  property-animation-name:
    - match: \b(animation-name)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: single-animation-name
    - include: stray-paren-or-semicolon

  # CSS Animations Level 1
  property-animation-play-state:
    - match: \b(animation-play-state)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: single-animation-play-state
    - include: stray-paren-or-semicolon

  # CSS Animations Level 1
  property-animation-timing-function:
    - match: \b(animation-timing-function)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: single-timing-function
    - include: stray-paren-or-semicolon

  # CSS Basic User Interface Module Level 4
  property-appearance:
    - match: ({{vendor_prefix}}\bappearance)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: \b(?:none|auto){{b}}
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Transforms Module Level 1
  property-backface-visibility:
    - match: \b(backface-visibility)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:visible|hidden){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-background-attachment:
    - match: \b(background-attachment)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: attachment
    - include: stray-paren-or-semicolon

  # Compositing and Blending Level 1
  property-background-blend-mode:
    - match: \b(background-blend-mode)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: blend-mode
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-background-clip:
    - match: \b(background-clip)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: box
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-background-color:
    - match: \b(background-color)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: color
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-background-image:
    - match: \b(background-image)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: bg-image
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-background-origin:
    - match: \b(background-origin)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: box
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-background-position:
    - match: \b(background-position)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: position
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-background-repeat:
    - match: \b(background-repeat)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: repeat-style
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-background-size:
    - match: \b(background-size)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: bg-size
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-background:
    - match: \b(background)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: bg-image
        - include: bg-size
        - include: repeat-style
        - include: box
        - include: attachment
        - include: color
        - include: position
        - match: '\/'
          scope: keyword.operator.arithmetic_operator.css
    - include: stray-paren-or-semicolon

  # CSS Inline Layout Module Level 3
  property-baseline-shift:
    - match: \b(baseline-shift)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:super|sub){{b}}'
          scope: support.constant.property-value.css
        - include: percentage
        - include: length
    - include: stray-paren-or-semicolon

  # CSS Generated Content Module Level 3
  property-bookmark-label:
    - match: \b(bookmark-label)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: content-list
    - include: stray-paren-or-semicolon

  # CSS Generated Content Module Level 3
  property-bookmark-level:
    - match: \b(bookmark-level)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: integer-positive
    - include: stray-paren-or-semicolon

  # CSS Generated Content Module Level 3
  property-bookmark-state:
    - match: \b(bookmark-state)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:open|closed){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-border:
    - match: \b(border)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: color
        - include: line-width
        - include: line-style
    - include: stray-paren-or-semicolon

  # CSS Round Display Level 1
  property-border-boundary:
    - match: \b(border-boundary)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:parent|none|display){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-border-color:
    - match: \b(border-{{optional_top_right_left_bottom}}color)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: color
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-border-image:
    - match: \b(border-image)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:stretch|space|round|repeat|none|fill|auto){{b}}'
          scope: support.constant.property-value.css
        - include: image
        - include: percentage-non-negative
        - include: length-non-negative
        - include: integer-non-negative
        - include: number-non-negative

    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-border-image-outset:
    - match: \b(border-image-outset)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: length-non-negative
        - include: number-non-negative
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-border-image-repeat:
    - match: \b(border-image-repeat)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:stretch|space|round|repeat){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-border-image-slice:
    - match: \b(border-image-slice)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '\bfill{{b}}'
          scope: support.constant.property-value.css
        - include: percentage-non-negative
        - include: integer-non-negative
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-border-image-source:
    - match: \b(border-image-source)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: image
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-border-image-width:
    - match: \b(border-image-width)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '\bauto{{b}}'
          scope: support.constant.property-value.css
        - include: percentage-non-negative
        - include: length-non-negative
        - include: number-non-negative
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-border-radius:
    - match: \b(border-(?:top-right-|top-left-|bottom-right-|bottom-left-)?radius)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: percentage-non-negative
        - include: length-non-negative
        - match: '\/'
          scope: keyword.operator.arithmetic.css
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-border-style:
    - match: \b(border-{{optional_top_right_left_bottom}}style)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: line-style
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-border-top-right-left-bottom:
    - match: \b(border-(?:top|right|left|bottom))\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: color
        - include: line-width
        - include: line-style
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-border-width:
    - match: \b(border-{{optional_top_right_left_bottom}}width)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: line-width
    - include: stray-paren-or-semicolon

  # CSS Fragmentation Module Level 3
  property-box-decoration-break:
    - match: \b(box-decoration-break)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:slice|clone){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-box-shadow:
    - match: \b(box-shadow)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '\binset{{b}}'
          scope: support.constant.property-value.css
        - include: length
        - include: color
    - include: stray-paren-or-semicolon

  # CSS Basic User Interface Module Level 3
  property-box-sizing:
    - match: \b(box-sizing)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:content-box|border-box){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Line Grid Module Level 1
  property-box-snap:
    - match: \b(box-snap)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '(?x)
            \b
            (?:
              none|
              last-baseline|
              center|
              block-start|
              block-end|
              baseline
            )
            {{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Display Module Level 3
  property-box-suppress:
    - match: \b(box-suppress)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:show|hide|discard){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # break-after and break-before are defined in two specs:
  #     CSS Fragmentation Module Level 3
  #     CSS Regions Module Level 1
  property-break-before-after:
    - match: \b(break-before|break-after)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '(?x)
            \b
            (?:
              verso|
              right|
              region|
              recto|
              page|
              left|
              column|
              avoid-region|
              avoid-page|
              avoid-column|
              avoid|
              auto|
              always
            )
            {{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Regions Module Level 1
  property-break-inside:
    - match: \b(break-inside)\s*(:)
      captures:
        1: support.constant.property-break-inside.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '(?x)
            \b
            (?:
              avoid-region|
              avoid-page|
              avoid-column|
              avoid|
              auto
            )
            {{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # TODO: The spec is currently incomplete. It doesn't define what a
  # <caret-color> is yet.
  # CSS Basic User Interface Module Level 4
  # property-caret-color:
  #   - match: \b(caret-color)\s*(:)
  #     captures:
  #       1: support.constant.property-name.css
  #       2: punctuation.separator.key-value.css
  #     push:
  #       - include: end-value
  #       - include: value-css-wide
  #       -
  #   - include: stray-paren-or-semicolon

  # CSS Basic User Interface Module Level 4
  property-caret-shape:
    - match: \b(caret-shape)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: caret-shape
    - include: stray-paren-or-semicolon

  # CSS Basic User Interface Module Level 4
  property-caret:
    - match: \b(caret)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: caret-shape
        # - include: caret-color  # TODO: enable when this is defined in the spec
    - include: stray-paren-or-semicolon

  # CSS Template Layout Module
  property-chains:
    - match: \b(chains)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - match: '\bnone{{b}}|[@*]'
          scope: support.constant.property-value.css
        - include: value-css-wide
        - include: identifier
    - include: stray-paren-or-semicolon

  # CSS Page Floats
  property-clear:
    - match: \b(clear)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '(?x)
            \b
            (?:
              top|
              right|
              none|
              left|
              inline-start|
              inline-end|
              bottom|
              both-inline|
              both-block|
              both|
              block-start|
              block-end
            )
            {{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Masking Module Level 1
  property-clip-path:
    - match: \b(clip-path)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: func-url
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: geometry-box
        - include: basic-shape
    - include: stray-paren-or-semicolon

  # CSS Masking Module Level 1
  property-clip-rule:
    - match: \b(clip-rule)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:nonzero|evenodd){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Color Module Level 4
  property-color:
    - match: \b(color)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: color
    - include: stray-paren-or-semicolon

  # Filter Effects Module Level 1
  property-color-interpolation-filters:
    - match: \b(color-interpolation-filters)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:sRGB|linearRGB|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Multi-column Layout Module
  property-columns:
    - match: \b(columns)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '\bauto{{b}}'
          scope: support.constant.property-value.css
        - include: length-positive
        - include: integer-positive
    - include: stray-paren-or-semicolon

  # CSS Multi-column Layout Module
  property-column-count:
    - match: \b(column-count)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '\bauto{{b}}'
          scope: support.constant.property-value.css
        - include: integer-positive
    - include: stray-paren-or-semicolon

  # CSS Multi-column Layout Module
  property-column-fill:
    - match: \b(column-fill)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:balance|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Multi-column Layout Module
  property-column-gap:
    - match: \b(column-gap)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '\bnormal{{b}}'
          scope: support.constant.property-value.css
        - include: length-non-negative
    - include: stray-paren-or-semicolon

  # CSS Multi-column Layout Module
  property-column-rule:
    - match: \b(column-rule)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: line-style
        - include: line-width
        - include: color
    - include: stray-paren-or-semicolon

  # CSS Multi-column Layout Module
  property-column-rule-color:
    - match: \b(column-rule-color)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: color
    - include: stray-paren-or-semicolon

  # CSS Multi-column Layout Module
  property-column-rule-style:
    - match: \b(column-rule-style)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: line-style  # identical to <border-style>
    - include: stray-paren-or-semicolon

  # CSS Multi-column Layout Module
  property-column-rule-width:
    - match: \b(column-rule-width)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: line-width  # identical to <border-width>
    - include: stray-paren-or-semicolon

  # CSS Multi-column Layout Module
  property-column-span:
    - match: \b(column-span)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:none|auto|all){{b}}'
          scope: support.constant.property-value.css
        - include: integer-non-negative
    - include: stray-paren-or-semicolon

  # CSS Multi-column Layout Module
  property-column-width:
    - match: \b(column-width)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '\bauto{{b}}'
          scope: support.constant.property-value.css
        - include: length-positive
    - include: stray-paren-or-semicolon

  # CSS Generated Content Module Level 3
  property-content:
    - match: \b(content)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: func-counters
        - include: func-counter
        - include: func-string
        - include: func-attr
        - include: image
        - match: '\b(?:normal|none){{b}}'
          scope: support.constant.property-value.css
        - include: content-list
        - match: '\/'
          scope: keyword.operator.arithmetic.css
    - include: stray-paren-or-semicolon

  # CSS Overflow Module Level 4
  property-continue:
    - match: \b(continue)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:paginate|overflow|fragments|discard|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Lists and Counters Module Level 3
  property-counter-set-reset-increment:
    - match: \b(counter-(?:set|reset|increment))\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: func-attr
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: integer
        - include: identifier
    - include: stray-paren-or-semicolon

  # CSS Speech Module
  property-cue-before-after:
    - match: \b(cue-before|cue-after|cue)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: func-url
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: decibel
    - include: stray-paren-or-semicolon

  # CSS Basic User Interface Module Level 3
  property-cursor:
    - match: \b(cursor)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: func-url
        - match: '(?x)
            \b
            (?:
              zoom-out|
              zoom-in|
              wait|
              w-resize|
              vertical-text|
              text|
              sw-resize|
              se-resize|
              s-resize|
              row-resize|
              progress|
              pointer|
              nwse-resize|
              nw-resize|
              ns-resize|
              not-allowed|
              none|
              no-drop|
              nesw-resize|
              ne-resize|
              n-resize|
              move|
              help|
              grabbing|
              grab|
              ew-resize|
              e-resize|
              default|
              crosshair|
              copy|
              context-menu|
              col-resize|
              cell|
              auto|
              all-scroll|
              alias
            )
            {{b}}'
          scope: support.constant.property-value.css
        - include: number
    - include: stray-paren-or-semicolon

  property-custom:
    - match: '({{custom_property_name}})\s*(:)'
      captures:
        1: support.constant.property-name.custom.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: any-value
    - include: stray-paren-or-semicolon

  property-deprecated:
    - match: '(?x)
        {{vendor_prefix}}
        \b
        (?:
          zoom|
          wrap-padding|
          wrap-option|
          wrap-margin|
          wrap|
          word-break-inside|
          word-break-cjk|
          white-space-treatment|
          white-space-collapsing|
          white-space-collapse|
          voice-pitch-range|
          vertical-position|
          user-zoom|
          user-modify|
          user-input|
          user-focus|
          text-underline-width|
          text-underline-style|
          text-underline-mode|
          text-underline-color|
          text-underline|
          text-trim|
          text-script|
          text-replace|
          text-overline-width|
          text-overline-style|
          text-overline-mode|
          text-overline-color|
          text-overline|
          text-overflow-mode|
          text-overflow-ellipsis|
          text-outline|
          text-line-through-width|
          text-line-through-style|
          text-line-through-mode|
          text-line-through-color|
          text-line-through|
          text-kashida-space|
          text-justify-trim|
          text-first-indent|
          text-emphasis-skip|
          text-combine-mode|
          text-combine-horizontal|
          text-combine|
          text-block-indent|
          text-blink|
          text-autospace|
          text-align-first|
          target-position|
          target-new|
          target-name|
          target|
          tab-side|
          speakability|
          scroll-snap-points-y|
          scroll-snap-points-x|
          scroll-snap-destination|
          scroll-snap-coordinate|
          row-gap|
          resolution|
          resizer|
          rendering-intent|
          region-overflow|
          punctuation-trim|
          progress-appearance|
          phonemes|
          page-policy|
          overflow-clip|
          orientation|
          nav-index|
          move-to|
          min-zoom|
          min-font-size|
          max-zoom|
          max-font-size|
          mask-source-type|
          mask-box-width|
          mask-box-source|
          mask-box-slice|
          mask-box-repeat|
          mask-box-outset|
          mask-box-image-width|
          mask-box-image-source|
          mask-box-image-slice|
          mask-box-image-repeat|
          mask-box-image-outset|
          mask-box-image|
          mask-box|
          marquee-repetition|
          marquee-play-count|
          marquee|
          marks|
          mark-before|
          mark-after|
          mark|
          linefeed-treatment|
          line-slack|
          line-grid-progression|
          line-grid-mode|
          layout-flow|
          key-equivalent|
          kerning-pair-threshold|
          kerning-mode|
          interpolation-mode|
          indent-edge-reset|
          ime-mode|
          icon|
          hyphenate-resource|
          hyphenate-lines|
          hyphenate-limit-before|
          hyphenate-limit-after|
          hyphenate-dictionary|
          hyphenate-before|
          hyphenate-after|
          hyphenate|
          grid-start|
          grid-span|
          grid-rows|
          grid-row-span|
          grid-row-sizing|
          grid-row-position|
          grid-row-align|
          grid-position|
          grid-flow|
          grid-end|
          grid-definition-rows|
          grid-definition-columns|
          grid-columns|
          grid-column-span|
          grid-column-sizing|
          grid-column-position|
          grid-column-align|
          grid-cell-stacking|
          grid-cell|
          grid-before|
          grid-auto-position|
          grid-after|
          glyph-orientation-vertical|
          glyph-orientation-horizontal|
          font-smooth|
          float-displace|
          flex-pack|
          flex-order|
          flex-line-pack|
          flex-item-align|
          flex-align|
          fit-position|
          fit|
          filter-margin-top|
          filter-margin-right|
          filter-margin-left|
          filter-margin-bottom|
          filter-margin|
          enable-background|
          display-role|
          display-outside|
          display-model|
          display-list|
          display-inside|
          display-extras|
          display-box|
          crop|
          content-order|
          column-break-before|
          column-break-after|
          color-profile|
          clip|
          clear-after|
          box-width|
          box-reflect|
          box-pack|
          box-orient|
          box-ordinal-group|
          box-lines|
          box-height|
          box-flex-group|
          box-flex|
          box-direction|
          box-break|
          box-align|
          border-length|
          border-break|
          bookmark-target|
          block-progression|
          bleed|
          binding|
          bikeshedding|
          behavior|
          background-spacing|
          background-quantity|
          background-break|
          all-space-treatment|
          accelerator
        )
        {{b}}'  # "clip" won't match "clip-path"
      scope: support.constant.property-name.css invalid.deprecated.css

  # CSS Writing Modes Level 3
  property-direction:
    - match: \b(direction)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:rtl|ltr){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Display Module Level 3
  property-display:
    - match: \b(display)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: display-outside
        - include: display-inside
        - include: display-listitem
        - include: display-internal
        - include: display-box
        - include: display-legacy
    - include: stray-paren-or-semicolon

  # CSS Inline Layout Module Level 3
  property-dominant-baseline:
    - match: \b(dominant-baseline)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '(?x)
            \b
            (?:
              text-top|
              text-bottom|
              middle|
              mathematical|
              ideographic|
              hanging|
              central|
              auto|
              alphabetic
            )
            {{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # Filter Effects Module Level 1
  property-filter:
    - match: \b(filter)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: func-drop-shadow
        - include: func-hue-rotate
        - include: func-filter
        - include: func-blur
        - include: func-url
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Flexible Box Layout Module Level 1
  property-flex:
    - match: \b(flex)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.flex.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:none|content|auto){{b}}'
          scope: support.constant.property-value.css
        - include: percentage-non-negative
        - include: length-non-negative
        - include: number-non-negative
    - include: stray-paren-or-semicolon

  # CSS Flexible Box Layout Module Level 1
  property-flex-basis:
    - match: \b(flex-basis)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.flex-basis.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:content|auto){{b}}'
          scope: support.constant.property-value.css
        - include: width
        - include: percentage-non-negative
        - include: length-non-negative
    - include: stray-paren-or-semicolon

  # CSS Flexible Box Layout Module Level 1
  property-flex-direction:
    - match: \b(flex-direction)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.flex-direction.css
        - include: end-value
        - include: value-css-wide
        - include: flex-direction
    - include: stray-paren-or-semicolon

  # CSS Flexible Box Layout Module Level 1
  property-flex-flow:
    - match: \b(flex-flow)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.flex-flow.css
        - include: end-value
        - include: value-css-wide
        - include: flex-direction
        - include: flex-wrap
    - include: stray-paren-or-semicolon

  # CSS Flexible Box Layout Module Level 1
  property-flex-shrink-grow:
    - match: \b(flex-shrink|flex-grow)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.flex-shrink-grow.css
        - include: end-value
        - include: value-css-wide
        - include: number-non-negative
    - include: stray-paren-or-semicolon

  # CSS Flexible Box Layout Module Level 1
  property-flex-wrap:
    - match: \b(flex-wrap)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.flex-wrap.css
        - include: end-value
        - include: value-css-wide
        - include: flex-wrap
    - include: stray-paren-or-semicolon

  # CSS Page Floats
  property-float:
    - match: \b(float)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.float.css
        - include: end-value
        - include: value-css-wide
        - include: func-snap-block
        - include: func-snap-inline
        - match: '(?x)
            \b
            (?:
              top|
              snap-inline|
              snap-block|
              right|
              none|
              left|
              inline-start|
              inline-end|
              bottom|
              block-start|
              block-end
            )
            {{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Page Floats
  property-float-defer:
    - match: \b(float-defer)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.float-defer.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:none|last){{b}}'
          scope: support.constant.property-value.css
        - include: integer
    - include: stray-paren-or-semicolon

  # CSS Page Floats
  property-float-offset:
    - match: \b(float-offset)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.float-offset.css
        - include: end-value
        - include: value-css-wide
        - include: percentage
        - include: length
    - include: stray-paren-or-semicolon

  # CSS Page Floats
  property-float-reference:
    - match: \b(float-reference)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.float-reference.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:region|page|inline|column){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # Filter Effects Module Level 1
  property-flood-color:
    - match: \b(flood-color)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.flood-color.css
        - include: end-value
        - include: value-css-wide
        - include: color
    - include: stray-paren-or-semicolon

  # Filter Effects Module Level 1
  property-flood-opacity:
    - match: \b(flood-opacity)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.flood-opacity.css
        - include: end-value
        - include: value-css-wide
        - include: percentage
        - include: number
    - include: stray-paren-or-semicolon

  # CSS Template Layout Module
  property-flow:
    - match: \b(flow)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.flow.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:same|auto){{b}}'
          scope: support.constant.property-value.css
        - include: string
        - match: '\*'
          scope: support.constant.property-value.css
        - include: identifier
    - include: stray-paren-or-semicolon

  # CSS Regions Module Level 1
  property-flow-from:
    - match: \b(flow-from)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.flow-from.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:none|inherit){{b}}'
          scope: support.constant.property-value.css
        - include: identifier
    - include: stray-paren-or-semicolon

  # CSS Regions Module Level 1
  property-flow-into:
    - match: \b(flow-into)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.flow-into.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:none|element|content){{b}}'
          scope: support.constant.property-value.css
        - include: identifier
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 3
  property-font:
    - match: \b(font)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.font.css
        - include: end-value
        - include: value-css-wide
        - include: font-family-generic
        - include: font-family-name
        - match: '(?x)
            \b
            (?:
              xx-small|
              xx-large|
              x-small|
              x-large|
              ultra-expanded|
              ultra-condensed|
              status-bar|
              smaller|
              small-caption|
              small-caps|
              small|
              semi-expanded|
              semi-condensed|
              oblique|
              normal|
              message-box|
              menu|
              medium|
              lighter|
              larger|
              large|
              italic|
              icon|
              extra-expanded|
              extra-condensed|
              expanded|
              condensed|
              caption|
              bolder|
              bold|
              [1-9]00
            )
            {{b}}'
          scope: support.constant.property-value.css
        - include: percentage-non-negative
        - include: length-non-negative
        - include: number-non-negative
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 3
  property-font-family:
    - match: \b(font-family)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.font-family.css
        - include: end-value
        - include: value-css-wide
        - include: font-family-generic
        - include: font-family-name
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 3
  property-font-feature-settings:
    - match: \b(font-feature-settings)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.font-feature-settings.css
        - include: end-value
        - include: value-css-wide
        - match: '\bnormal{{b}}'
          scope: support.constant.property-value.css
        - include: feature-tag-value
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 3
  property-font-kerning:
    - match: \b(font-kerning)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.font-kerning.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:normal|none|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 3
  property-font-language-override:
    - match: \b(font-language-override)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.font-language-override.css
        - include: end-value
        - include: value-css-wide
        - match: '\bnormal{{b}}'
          scope: support.constant.property-value.css
        - include: string
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 3
  property-font-size:
    - match: \b(font-size)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.font-size.css
        - include: end-value
        - include: value-css-wide
        - match: '(?x)
            \b
            (?:
              xx-small|
              xx-large|
              x-small|
              x-large|
              smaller|
              small|
              medium|
              larger|
              large
            )
            {{b}}'
          scope: support.constant.property-value.css
        - include: percentage-non-negative
        - include: length-non-negative
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 3
  property-font-size-adjust:
    - match: \b(font-size-adjust)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.font-size-adjust.css
        - include: end-value
        - include: value-css-wide
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: number-non-negative
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 3
  property-font-stretch:
    - match: \b(font-stretch)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.font-stretch.css
        - include: end-value
        - include: value-css-wide
        - match: '(?x)
            \b
            (?:
              ultra-expanded|
              ultra-condensed|
              semi-expanded|
              semi-condensed|
              normal|
              extra-expanded|
              extra-condensed|
              expanded|
              condensed
            )
            {{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 3
  property-font-style:
    - match: \b(font-style)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.font-style.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:oblique|normal|italic){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 3
  property-font-variant:
    - match: \b(font-variant)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.font-variant.css
        - include: end-value
        - include: value-css-wide
        - include: func-swash-styleset-stylistic-ornaments-character-variant-annotation
        - match: '(?x)
            \b
            (?:
              unicase|
              titling-caps|
              super|
              sub|
              small-caps|
              slashed-zero|
              ruby|
              petite-caps|
              ordinal|
              normal|
              none|
              all-small-caps|
              all-petite-caps
            )
            {{b}}'
          scope: support.constant.property-value.css
        - include: common-lig-values
        - include: discretionary-lig-values
        - include: historical-lig-values
        - include: contextual-alt-values
        - include: numeric-figure-values
        - include: numeric-spacing-values
        - include: numeric-fraction-values
        - include: east-asian-variant-values
        - include: east-asian-width-values
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 3
  property-font-variant-alternates:
    - match: \b(font-variant-alternates)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.font-variant-alternates.css
        - include: end-value
        - include: value-css-wide
        - include: func-swash-styleset-stylistic-ornaments-character-variant-annotation
        - match: '\b(?:normal|historical-forms){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 3
  property-font-variant-caps:
    - match: \b(font-variant-caps)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.font-variant-caps.css
        - include: end-value
        - include: value-css-wide
        - match: '(?x)
            \b
            (?:
              unicase|
              titling-caps|
              small-caps|
              petite-caps|
              normal|
              all-small-caps|
              all-petite-caps
            )
            {{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 3
  property-font-variant-east-asian:
    - match: \b(font-variant-east-asian)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.font-variant-east-asian.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:ruby|normal){{b}}'
          scope: support.constant.property-value.css
        - include: east-asian-width-values
        - include: east-asian-variant-values
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 3
  property-font-variant-ligatures:
    - match: \b(font-variant-ligatures)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.font-variant-ligatures.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:normal|none){{b}}'
          scope: support.constant.property-value.css
        - include: common-lig-values
        - include: discretionary-lig-values
        - include: historical-lig-values
        - include: contextual-alt-values
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 3
  property-font-variant-numeric:
    - match: \b(font-variant-numeric)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.font-variant-numeric.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:slashed-zero|ordinal|normal){{b}}'
          scope: support.constant.property-value.css
        - include: numeric-figure-values
        - include: numeric-spacing-values
        - include: numeric-fraction-values
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 3
  property-font-variant-position:
    - match: \b(font-variant-position)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.font-variant-position.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:super|sub|normal){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 3
  property-font-weight:
    - match: \b(font-weight)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.font-weight.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:normal|lighter|bolder|bold|[1-9]00){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Generated Content for Paged Media Module
  property-footnote-display:
    - match: \b(footnote-display)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.footnote-display.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:inline|compact|block){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Generated Content for Paged Media Module
  property-footnote-policy:
    - match: \b(footnote-policy)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.footnote-policy.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:line|block|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Grid Layout Module Level 1
  property-grid:
    - match: \b(grid)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.grid.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:none|dense|auto-flow){{b}}'
          scope: support.constant.property-value.css
        - include: track-list
        - include: auto-track-list
        - include: string
    - include: stray-paren-or-semicolon

  # CSS Grid Layout Module Level 1
  property-grid-row-column-area:
    - match: '(?x)
        \b
        (
          grid-row-start|
          grid-row-end|
          grid-row|
          grid-column-start|
          grid-column-end|
          grid-column|
          grid-area
        )\s*
        (:)'
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.grid-row-column-area.css
        - include: end-value
        - include: value-css-wide
        - include: grid-line
    - include: stray-paren-or-semicolon

  # CSS Grid Layout Module Level 1
  property-grid-row-column-gap:
    - match: \b(grid-row-gap|grid-gap|grid-column-gap)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.grid-row-column-gap.css
        - include: end-value
        - include: value-css-wide
        - include: percentage-non-negative
        - include: length-non-negative
    - include: stray-paren-or-semicolon

  # CSS Grid Layout Module Level 1
  property-grid-auto-flow:
    - match: \b(grid-auto-flow)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.grid-auto-flow.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:row|dense|column){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Grid Layout Module Level 1
  property-grid-auto-rows-columns:
    - match: \b(grid-auto-rows|grid-auto-columns)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.grid-auto-rows-columns.css
        - include: end-value
        - include: value-css-wide
        - include: track-size
    - include: stray-paren-or-semicolon

  # CSS Grid Layout Module Level 1
  property-grid-template-areas:
    - match: \b(grid-template-areas)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.grid-template-areas.css
        - include: end-value
        - include: value-css-wide
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: string
    - include: stray-paren-or-semicolon

  # CSS Grid Layout Module Level 1
  property-grid-template-rows-columns:
    - match: \b(grid-template-rows|grid-template-columns)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.grid-template-rows-columns.css
        - include: end-value
        - include: value-css-wide
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: track-list
        - include: auto-track-list
    - include: stray-paren-or-semicolon

  # CSS Grid Layout Module Level 1
  property-grid-template:
    - match: \b(grid-template)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.grid-template.css
        - include: end-value
        - include: value-css-wide
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: track-list
        - include: auto-track-list
        - include: string
    - include: stray-paren-or-semicolon

  # CSS Text Module Level 3
  property-hanging-punctuation:
    - match: \b(hanging-punctuation)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.hanging-punctuation.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:none|last|force-end|first|allow-end){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS basic box model
  property-height:
    - match: \b(height)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.height.css
        - include: end-value
        - include: value-css-wide
        - match: '\bauto{{b}}'
          scope: support.constant.property-value.css
        - include: percentage-non-negative
        - include: length-non-negative
    - include: stray-paren-or-semicolon

  # CSS Text Module Level 4
  property-hyphenate-character:
    - match: \b(hyphenate-character)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.hyphenate-character.css
        - include: end-value
        - include: value-css-wide
        - match: '\bauto{{b}}'
          scope: support.constant.property-value.css
        - include: string
    - include: stray-paren-or-semicolon

  # CSS Text Module Level 4
  property-hyphenate-limit-chars:
    - match: \b(hyphenate-limit-chars)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.hyphenate-limit-chars.css
        - include: end-value
        - include: value-css-wide
        - match: '\bauto{{b}}'
          scope: support.constant.property-value.css
        - include: integer
    - include: stray-paren-or-semicolon

  # CSS Text Module Level 4
  property-hyphenate-limit-last:
    - match: \b(hyphenate-limit-last)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.hyphenate-limit-last.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:spread|page|none|column|always){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Text Module Level 4
  property-hyphenate-limit-lines:
    - match: \b(hyphenate-limit-lines)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.hyphenate-limit-lines.css
        - include: end-value
        - include: value-css-wide
        - match: '\bno-limit{{b}}'
          scope: support.constant.property-value.css
        - include: integer
    - include: stray-paren-or-semicolon

  # CSS Text Module Level 4
  property-hyphenate-limit-zone:
    - match: \b(hyphenate-limit-zone)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.hyphenate-limit-zone.css
        - include: end-value
        - include: value-css-wide
        - include: percentage
        - include: length
    - include: stray-paren-or-semicolon

  # CSS Text Module Level 3
  property-hyphens:
    - match: \b(hyphens)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.hyphens.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:none|manual|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Image Values and Replaced Content Module Level 3
  property-image-orientation:
    - match: \b(image-orientation)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.image-orientation.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:from-image|flip){{b}}'
          scope: support.constant.property-value.css
        - include: angle
    - include: stray-paren-or-semicolon

  # CSS Image Values and Replaced Content Module Level 3
  property-image-rendering:
    - match: \b(image-rendering)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.image-rendering.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:pixelated|crisp-edges|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Image Values and Replaced Content Module Level 3
  property-image-resolution:
    - match: \b(image-resolution)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.image-resolution.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:snap|from-image){{b}}'
          scope: support.constant.property-value.css
        - include: resolution
    - include: stray-paren-or-semicolon

  # CSS Inline Layout Module Level 3
  property-initial-letter:
    - match: \b(initial-letter)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.initial-letter.css
        - include: end-value
        - include: value-css-wide
        - match: '\bnormal{{b}}'
          scope: support.constant.property-value.css
        - include: integer-positive
        - include: number-non-negative
    - include: stray-paren-or-semicolon

  # CSS Inline Layout Module Level 3
  property-initial-letter-align:
    - match: \b(initial-letter-align)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.initial-letter-align.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:ideographic|hebrew|hanging|border-box|alphabetic){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Inline Layout Module Level 3
  property-initial-letter-wrap:
    - match: \b(initial-letter-wrap)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.initial-letter-wrap.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:none|grid|first|all){{b}}'
          scope: support.constant.property-value.css
        - include: percentage
        - include: length
    - include: stray-paren-or-semicolon

  # Compositing and Blending Level 1
  property-isolation:
    - match: \b(isolation)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.isolation.css
        - include: end-value
        - include: value-css-wide
        - include: isolation-mode
    - include: stray-paren-or-semicolon

  # justify-content is defined in two specs:
  #     CSS Flexible Box Layout Module Level 1
  #     CSS Box Alignment Module Level 3
  property-justify-content:
    - match: \b(justify-content)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.justify-content.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:space-between|space-around|flex-start|flex-end|center){{b}}'
          scope: support.constant.property-value.css
        - include: baseline-position
        - include: content-distribution
        - include: overflow-position
        - include: content-position
    - include: stray-paren-or-semicolon

  # CSS Box Alignment Module Level 3
  property-justify-items:
    - match: \b(justify-items)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.justify-items.css
        - include: end-value
        - include: value-css-wide
        - include: baseline-position
        - include: overflow-position
        - include: self-position
        - match: '(?x)
            \b
            (?:
              stretch|
              right|
              normal|
              legacy|
              left|
              center|
              auto
            )
            {{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Box Alignment Module Level 3
  property-justify-self:
    - match: \b(justify-self)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.justify-self.css
        - include: end-value
        - include: value-css-wide
        - include: baseline-position
        - include: overflow-position
        - include: self-position
        - match: '\b(?:stretch|normal|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Text Module Level 3
  property-letter-spacing:
    - match: \b(letter-spacing)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.letter-spacing.css
        - include: end-value
        - include: value-css-wide
        - match: '\bnormal{{b}}'
          scope: support.constant.property-value.css
        - include: length
    - include: stray-paren-or-semicolon

  # CSS Filter Effects Module Level 1
  property-lighting-color:
    - match: \b(lighting-color)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.lighting-color.css
        - include: end-value
        - include: value-css-wide
        - include: color
    - include: stray-paren-or-semicolon

  # CSS Text Module Level 3
  property-line-break:
    - match: \b(line-break)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.line-break.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:strict|normal|loose|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Line Grid Module Level 1
  property-line-grid:
    - match: \b(line-grid)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.line-grid.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:match-parent|create){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS 2.1
  property-line-height:
    - match: \b(line-height)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.line-height.css
        - include: end-value
        - include: value-css-wide
        - match: '\bnormal{{b}}'
          scope: support.constant.property-value.css
        - include: percentage-non-negative
        - include: length-non-negative
        - include: number-non-negative
    - include: stray-paren-or-semicolon

  # CSS Line Grid Module Level 1
  property-line-snap:
    - match: \b(line-snap)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.line-snap.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:none|contain|baseline){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Lists and Counters Module Level 3
  property-list-style:
    - match: \b(list-style)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.list-style.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:outside|none|inside){{b}}'
          scope: support.constant.property-value.css
        - include: image
        - include: string
        - include: identifier
    - include: stray-paren-or-semicolon

  # CSS Lists and Counters Module Level 3
  property-list-style-image:
    - match: \b(list-style-image)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.list-style-image.css
        - include: end-value
        - include: value-css-wide
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: image
    - include: stray-paren-or-semicolon

  # CSS Lists and Counters Module Level 3
  property-list-style-position:
    - match: \b(list-style-position)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.list-style-position.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:outside|inside){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Lists and Counters Module Level 3
  property-list-style-type:
    - match: \b(list-style-type)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.list-style-type.css
        - include: end-value
        - include: value-css-wide
        - include: func-symbols
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: string
        - include: identifier
    - include: stray-paren-or-semicolon

  # CSS basic box model
  property-margin:
    - match: \b(margin-top|margin-right|margin-left|margin-bottom|margin)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.margin.css
        - include: end-value
        - include: value-css-wide
        - match: '\bauto{{b}}'
          scope: support.constant.property-value.css
        - include: percentage
        - include: length
    - include: stray-paren-or-semicolon

  # SVG Markers
  property-marker:
    - match: \b(marker)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.marker.css
        - include: end-value
        - include: value-css-wide
        - include: marker-ref
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: percentage
        - include: length
    - include: stray-paren-or-semicolon

  # SVG Markers
  property-marker-knockout:
    - match: \b(marker-knockout-right|marker-knockout-left)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.marker-knockout.css
        - include: end-value
        - include: value-css-wide
        - include: knockout-shape
        - include: knockout-offset
    - include: stray-paren-or-semicolon

  # SVG Markers
  property-marker-pattern:
    - match: \b(marker-pattern)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.marker-pattern.css
        - include: end-value
        - include: value-css-wide
        - include: marker-gap
        - include: marker-ref
    - include: stray-paren-or-semicolon

  # SVG Markers
  property-marker-start-segment-mid-end:
    - match: \b(marker-start|marker-segment|marker-mid|marker-end)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.marker-start-segment-mid-end.css
        - include: end-value
        - include: value-css-wide
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: marker-ref
    - include: stray-paren-or-semicolon

  # CSS Lists and Counters Module Level 3
  property-marker-side:
    - match: \b(marker-side)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property.marker-side.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:list-item|list-container){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon






  # CSS Positioned Layout Module Level 3
  property-top-right-left-bottom:
    - match: \b(top|right|left|bottom)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - match: '\bauto{{b}}'
          scope: support.constant.property-value.css
        - include: percentage
        - include: length
    - include: stray-paren-or-semicolon

  # property-list matches a block of property-value pairs.
  # {
  #     property1: value1;
  #     property2: value2;
  # }
  property-list:
    - match: '{'
      scope: punctuation.section.property-list.begin.css
      push:
        - meta_scope: meta.property-list.css
        - match: '(?=})'
          pop: true
        - include: properties

  prototype:
    - include: comment

  quote:
    - match: '(?x)
        \b
        (?:
          open-quote|
          no-open-quote|
          no-close-quote|
          close-quote
        )
        {{b}}'
      scope: support.constant.property-value.css

  ratio:
    - match: '{{ratio}}'
      captures:
        1: constant.numeric.css
        2: keyword.operator.arithmetic.css
        3: constant.numeric.css

  repeat-style:
    - match: '(?x)
        \b
        (?:
          space|
          round|
          repeat-y|
          repeat-x|
          repeat|
          no-repeat
        )
        {{b}}'
      scope: support.constant.property-value.css

  resolution:
    - match: '({{integer_pos}})({{resolution_unit}})'
      captures:
        1: constant.numeric.css
        2: keyword.other.unit.css

  # <rgb-component> is a superset of <alpha-value> and will match it too.
  # <alpha-value> is limited to the range 0-100% or 0.0-1.0.
  # <rgb-component> matches the range 0-100% or 0.0 - 255.0.
  # Since <alpha-value> is used along with <rgb-component>, there's no point
  # creating a separate context.
  rgb-component:
    - include: percentage-zero-to-100
    - include: number-zero-to-255

  # A rule is a selector and a property list.
  # selector {
  #     property1: value1;
  #     property2: value2;
  # }
  rule:
    - match: '(?=[\w.:#-\[*])'
      push:
        - match: '}'
          scope: punctuation.section.property-list.end.css
          pop: true
        - include: property-list
        - include: selector
    - include: stray-brace

  selector:
    - include: selector-simple-compound
    - include: selector-combinator

  selector-attribute:
    - match: '\['
      scope: punctuation.section.attribute-selector.begin.css
      push:
        - meta_scope: meta.attribute-selector.css
        - match: '\]'
          scope: punctuation.section.attribute-selector.end.css
          pop: true
        # It's difficult to match attribute names and values separately when
        # the values are unquoted.
        #     [attr="value"]  easy to distinguish attr and value
        #     [attr=value]    attr pattern will probably match value text
        # The only way to distinguish the two is that values are always preceded
        # by "attribute matchers" (e.g. ~=, ^=, $=, *=, =). Since we can't use
        # lookbehind to check for this, instead we scan for the matcher first.
        # We push a new context on the stack when we find it. The new context
        # will only match text on the right side of the '=' symbol (the value
        # text). In this way we can fake positive lookbehind.
        - match: '{{attr_matcher}}'
          scope: keyword.operator.attribute-selector.css
          push:
            - match: '(?=])'
              pop: true
            - include: string
            - match: '\b[iI]{{b}}'
              scope: support.constant.attr-modifier.css
            - match: '({{identifier}})\s*(?=[i\]])'
              captures:
                1: string.unquoted.attribute-value.css
        - match: '{{wq_name}}'
          captures:
            1: entity.other.attribute-name.namespace.css
            2: entity.other.attribute-name.namespace.wildcard.css
            3: punctuation.separator.namespace.css
            4: entity.other.attribute-name.css
            5: entity.other.attribute-name.wildcard.css

  selector-class:
    - match: '(\.){{identifier}}'
      captures:
        0: entity.other.attribute-name.class.css
        1: punctuation.definition.entity.css

  selector-combinator:
    - match: '{{combinator}}(?![>+~|])'
      scope: keyword.operator.combinator.css
    - match: '{{combinator}}{2,}'
      scope: keyword.operator.combinator.css invalid.illegal.combinator.css

  selector-id:
    - match: '(#){{identifier}}'
      captures:
        0: entity.other.attribute-name.id.css
        1: punctuation.definition.entity.css

  selector-keyframes:
    - match: '\b(?:to|from){{b}}'
      scope: entity.other.attribute-name.keyframes-selector.css
    - include: percentage-zero-to-100

  selector-page:
    - include: selector-page-pseudo-class
    - include: identifier

  selector-page-pseudo-class:
    - match: '(:)(?:right|left|first|blank){{b}}'
      captures:
        0: entity.other.attribute-name.pseudo-class.css
        1: punctuation.definition.entity.css

  selector-pseudo-class:
    # Match pseudo-class functions first to avoid collisions between
    # pseudo-classes like :drop and :drop().
    - include: selector-pseudo-class-func
    - include: selector-pseudo-class-deprecated
    - match: '(?x)
        (:)
        {{vendor_prefix}}
        (?:
          visited|
          valid|
          user-invalid|
          target|
          scope|
          root|
          required|
          read-write|
          read-only|
          playing|
          placeholder-shown|
          paused|
          past|
          out-of-range|
          optional|
          only-of-type|
          only-child|
          link|
          last-of-type|
          last-child|
          invalid|
          indeterminate|
          in-range|
          hover|
          host|
          future|
          focus-within|
          focus|
          first-of-type|
          first-child|
          enabled|
          empty|
          drop|
          disabled|
          default|
          current|
          checked|
          blank|
          any-link|
          active
        )
        {{b}}'
      captures:
        0: entity.other.attribute-name.pseudo-class.css
        1: punctuation.definition.entity.css
    - include: selector-pseudo-class-invalid

  selector-pseudo-class-deprecated:
    - match: '(?x)
        (:)
        {{vendor_prefix}}
        (?:
          first-line|
          first-letter|
          bound-element|
          before|
          after
        )
        {{b}}'
      captures:
        0: entity.other.attribute-name.pseudo-class.css invalid.deprecated.css
        1: punctuation.definition.entity.css

  selector-pseudo-class-dir:
    - match: ((:)dir)(\()
      captures:
        1: entity.other.attribute-name.pseudo-class.css
        2: punctuation.definition.entity.css
        3: punctuation.section.function.begin.css
      push:
        - meta_content_scope: meta.pseudo-class.dir.css
        - include: end-func
        - match: \b(?:rtl|ltr)\b
          scope: support.constant.property-value.css
    - include: stray-paren

  selector-pseudo-class-drop:
    - match: ((:)drop)(\()
      captures:
        1: entity.other.attribute-name.pseudo-class.css
        2: punctuation.definition.entity.css
        3: punctuation.section.function.begin.css
      push:
        - meta_content_scope: meta.pseudo-class.drop.css
        - include: end-func
        - match: \b(?:valid|invalid|active)\b
          scope: support.constant.property-value.css
    - include: stray-paren

  selector-pseudo-class-func:
    - include: selector-pseudo-class-dir
    - include: selector-pseudo-class-drop
    - include: selector-pseudo-class-host
    - include: selector-pseudo-class-lang
    - include: selector-pseudo-class-not-matches-has
    - include: selector-pseudo-class-nth-child
    - include: selector-pseudo-class-nth-column-nth-type
    - include: selector-pseudo-class-scope-context

  selector-pseudo-class-host:
    - match: ((:)host(?:-context)?)(\()
      captures:
        1: entity.other.attribute-name.pseudo-class.css
        2: punctuation.definition.entity.css
        3: punctuation.section.function.begin.css
      push:
        - meta_content_scope: meta.pseudo-class.host.css
        - include: end-func
        - include: selector-simple-compound
    - include: stray-paren

  # Match selector text that starts with ":" but isn't on the list of valid
  # pseudo-classes. This prevents the text from being mistakenly matched by
  # another context, like the type selector.
  selector-pseudo-class-invalid:
    - match: '(:)[\w-]+'
      captures:
        # Don't apply a scope to the whole match so it won't be highlighted.
        1: punctuation.definition.entity.css

  selector-pseudo-class-lang:
    - match: ((:)lang)(\()
      captures:
        1: entity.other.attribute-name.pseudo-class.css
        2: punctuation.definition.entity.css
        3: punctuation.section.function.begin.css
      push:
        - meta_content_scope: meta.pseudo-class.lang.css
        - include: end-func
        - match: '[*a-zA-Z0-9-]+'
          scope: support.constant.property-value.css
    - include: stray-paren

  selector-pseudo-class-not-matches-has:
    - match: '((:)(?:not|matches|has))(\()'
      captures:
        1: entity.other.attribute-name.pseudo-class.css
        2: punctuation.definition.entity.css
        3: punctuation.section.function.begin.css
      push:
        - meta_content_scope: meta.pseudo-class.not-matches-has.css
        - include: end-func
        - include: selector
    - include: stray-paren

  selector-pseudo-class-nth-child:
    - match: '((:)(?:nth-last-child|nth-child))(\()'
      captures:
        1: entity.other.attribute-name.pseudo-class.css
        2: punctuation.definition.entity.css
        3: punctuation.section.function.begin.css
      push:
        - meta_content_scope: meta.pseudo-class.nth-child.css
        - include: end-func
        - match: '\bof{{b}}'
          scope: support.constant.property-value.css
        - include: an_plus_b
        - include: selector
    - include: stray-paren

  selector-pseudo-class-nth-column-nth-type:
    - match: '(?x)
      (
        (:)
        (?:
          nth-of-type|
          nth-last-of-type|
          nth-last-column|
          nth-column
        )
      )
      (\()'
      captures:
        1: entity.other.attribute-name.pseudo-class.css
        2: punctuation.definition.entity.css
        3: punctuation.section.function.begin.css
      push:
        - meta_content_scope: meta.pseudo-class.nth.css
        - include: end-func
        - include: an_plus_b
    - include: stray-paren

  selector-pseudo-class-scope-context:
    - match: ((:)scope-context)(\()
      captures:
        1: entity.other.attribute-name.pseudo-class.css
        2: punctuation.definition.entity.css
        3: punctuation.section.function.begin.css
      push:
        - meta_content_scope: meta.pseudo-class.scope-context.css
        - include: end-func
        - include: selector
    - include: stray-paren

  selector-pseudo-element:
    - match: '(?x)
        (::)
        {{vendor_prefix}}
        (?:
          spelling-error|
          shadow|
          selection|
          region|
          placeholder|
          marker|
          inactive-selection|
          grammar-error|
          first-line|
          first-letter|
          content|
          before|
          after
        )
        {{b}}'
      captures:
        0: entity.other.attribute-name.pseudo-element.css
        1: punctuation.definition.entity.css
    - include: selector-pseudo-element-slotted
    - include: selector-pseudo-element-attr
    - include: selector-pseudo-element-invalid

  selector-pseudo-element-attr:
    - match: '((::)attr)(\()'
      captures:
        1: entity.other.attribute-name.pseudo-element.css
        2: punctuation.definition.entity.css
        3: punctuation.section.function.begin.css
      push:
        - meta_content_scope: meta.pseudo-element.attr.css
        - include: end-func
        # The <wq-name> pattern is close enough to the <namespace-attr> pattern
        # defined in Non-element Selectors Module Level 1.
        # https://drafts.csswg.org/selectors-nonelement/#attribute-node-selectors
        - match: '{{wq_name}}'
          captures:
            1: string.unquoted.namespace.css
            2: string.unquoted.namespace.wildcard.css
            3: punctuation.separator.namespace.css
            4: entity.name.tag.css
            5: entity.name.tag.wildcard.css
    - include: stray-paren

  # Match selector text that starts with "::" but isn't on the list of valid
  # pseudo-elements. This prevents the text from being mistakenly matched by
  # another context, like the type selector.
  selector-pseudo-element-invalid:
    - match: '(::)[\w-]+'
      captures:
        # Don't apply a scope to the whole match so it won't be highlighted.
        1: punctuation.definition.entity.css

  selector-pseudo-element-slotted:
    - match: '((::)slotted)(\()'
      captures:
        1: entity.other.attribute-name.pseudo-element.css
        2: punctuation.definition.entity.css
        3: punctuation.section.function.begin.css
      push:
        - meta_content_scope: meta.pseudo-element.slotted.css
        - include: end-func
        - include: selector-simple-compound
    - include: stray-paren

  # This matches simple selectors and compound selectors, which are just one
  # or more simple selectors.
  selector-simple-compound:
    - include: selector-pseudo-element
    - include: selector-pseudo-class
    - include: selector-id
    - include: selector-class
    - include: selector-attribute
    # Match selector-type last because this includes custom elements, which
    # match nonspecific identifiers.
    - include: selector-type

  selector-type:
    - include: selector-type-deprecated
    - match: '(?x)
        (?:
          {{wq_name}}|
          {{ns_prefix}}(\*)
        )'
      captures:
        1: string.unquoted.namespace.css
        2: string.unquoted.namespace.wildcard.css
        3: punctuation.separator.namespace.css
        4: entity.name.tag.css
        5: entity.name.tag.wildcard.css
        6: string.unquoted.namespace.css
        7: string.unquoted.namespace.wildcard.css
        8: punctuation.separator.namespace.css
        9: entity.name.tag.wildcard.css

  selector-type-deprecated:
    - match: '(?x)
        \b
        (?:
          xmp|
          tt|
          strike|
          spacer|
          plaintext|
          noframes|
          noembed|
          nobr|
          nextid|
          multicol|
          marquee|
          listing|
          isindex|
          hgroup|
          frameset|
          frame|
          font|
          dir|
          center|
          blink|
          big|
          bgsound|
          basefont|
          applet|
          acronym
        )
        {{b}}'
      scope: entity.name.tag.css invalid.deprecated.css

  self-position:
    - match: '(?x)
        \b
        (?:
          start|
          self-start|
          self-end|
          right|
          left|
          flex-start|
          flex-end|
          end|
          center
        )
        {{b}}'
      scope: support.constant.property-value.css

  shape-arg:
    - include: percentage
    - include: length

  shape-box:
    - include: box
    - match: '\bmargin-box{{b}}'
      scope: support.constant.property-value.css

  shape-radius:
    - match: '\b(?:farthest-side|closest-side){{b}}'
      scope: support.constant.property-value.css
    - include: percentage
    - include: length

  side-or-corner:
    - match: '\b(?:top|right|left|bottom){{b}}'
      scope: support.constant.property-value.css

  single-animation-composition:
    - match: '\b(?:replace|add|accumulate){{b}}'
      scope: support.constant.property-value.css

  single-animation-direction:
    - match: '(?x)
        \b
        (?:
          reverse|
          normal|
          alternate-reverse|
          alternate
        )
        {{b}}'
      scope: support.constant.property-value.css

  single-animation-fill-mode:
    - match: '(?x)
        \b
        (?:
          none|
          forwards|
          both|
          backwards
        )
        {{b}}'
      scope: support.constant.property-value.css

  single-animation-iteration-count:
    - match: '\binfinite{{b}}'
      scope: support.constant.property-value.css
    - include: number

  single-animation-name:
    - match: '\bnone{{b}}'
      scope: support.constant.property-value.css
    - include: string
    - include: identifier

  single-animation-play-state:
    - match: '\b(?:running|paused){{b}}'
      scope: support.constant.property-value.css

  single-timing-function:
    - match: '(?x)
        \b
        (?:
          step-start|
          step-end|
          linear|
          ease-out|
          ease-in-out|
          ease-in|
          ease
        )
        {{b}}'
      scope: support.constant.property-value.css
    - include: func-cubic-bezier
    - include: func-steps

  size:
    - include: extent-keyword
    - include: percentage-non-negative
    - include: length-non-negative

  stray-brace:
    - match: '}'
      scope: invalid.illegal.stray-brace.css

  stray-paren:
    - match: \)
      scope: invalid.illegal.stray-paren.css

  # TODO: delete this after you're sure the stray matching isn't overzealous.
  # you won't know this until after you've implemented most properties.
  # "overzealous" means that getting it to work will make it so that a single
  # bad property will cause stray matches throughout the rest of the file.
  # ideally, the stray matches should stop at the end of the current block.
  # stray-paren-or-semicolon:
  #   - match: '[;)]'
  #     scope: invalid.illegal.stray.css
  #     push:
  #       - match: '(?=})'
  #         pop: true

  stray-paren-or-semicolon:
    - include: stray-semicolon
    - include: stray-paren

  stray-semicolon:
    - match: ';'
      scope: invalid.illegal.stray-semicolon.css

  string:
    - include: string-double
    - include: string-single

  string-double:
    - match: '"'
      scope: punctuation.definition.string.begin.css
      push:
        # /* inside string should not match as comment
        - meta_include_prototype: false
        - meta_scope: string.quoted.double.css
        - match: '"'
          scope: punctuation.definition.string.end.css
          pop: true
        - include: escape

  string-single:
    - meta_include_prototype: false
    - match: "'"
      scope: punctuation.definition.string.begin.css
      push:
        # /* inside string should not match as comment
        - meta_include_prototype: false
        - meta_scope: string.quoted.single.css
        - match: "'"
          scope: punctuation.definition.string.end.css
          pop: true
        - include: escape

  supports-condition:
    - match: '\('
      scope: punctuation.section.supports-condition.begin.css
      push:
        - meta_scope: meta.supports-condition.css
        - match: '\)'
          scope: punctuation.section.supports-condition.end.css
          pop: true
        - include: supports-condition
        - include: supports-condition-operator
        - include: properties
    - include: stray-paren

  symbol:
    - include: image
    - include: string
    - include: identifier

  supports-condition-operator:
    - match: \b(?:or|not|and){{b}}
      scope: keyword.operator.logic.at-supports.css

  target:
    - include: func-target-counters
    - include: func-target-text

  time:
    - include: func-calc
    - match: '(?x)
        (?:
          ({{number}})({{time_unit}})\b|
          ({{zero}})
        )'
      captures:
        1: constant.numeric.css
        2: keyword.other.unit.css
        3: constant.numeric.css

  track-list:
    - include: track-repeat
    - include: track-size
    - include: line-names

  track-repeat:
    - include: func-repeat

  track-size:
    - include: func-minmax
    - include: func-fit-content
    - match: '\b(?:min-content|max-content|auto){{b}}'
      scope: support.constant.property-value.css
    - include: flex-non-negative
    - include: percentage-non-negative
    - include: length-non-negative

  type-or-unit:
    - match: '(?x)
        \b
        (?:
          url|
          time|
          string|
          number|
          length|
          integer|
          frequency|
          color|
          angle|
          {{angle_unit}}|
          {{frequency_unit}}|
          {{decibel_unit}}|
          {{length_unit}}|
          {{percentage_unit}}|
          {{time_unit}}
        )
        {{b}}'
      scope: support.constant.property-value.css

  # This context matches CSS-wide keywords and functions, like "inherit",
  # "var()", and "!important". It should be included in all property contexts.
  value-css-wide:
    - include: func-var
    # TODO: write these? they are at-risk.
    # - include: func-attr
    # - include: func-toggle
    - match: '!important'
      scope: keyword.other.important.css
    - match: '\b(?:unset|revert|inherit|initial){{b}}'
      scope: support.constant.property-value.css

  viewport-descriptors:
    - include: descriptor-viewport-user-zoom
    - include: descriptor-viewport-orientation
    - include: descriptor-viewport-height-width
    - include: descriptor-viewport-zoom

  viewport-length:
    - match: '\b(?:extend-to-zoom|auto){{b}}'
      scope: support.constant.property-value.css
    - include: percentage-non-negative
    - include: length-non-negative

  width:
    - include: func-fit-content
    - match: '\b(?:min-content|max-content|fit-content|fill){{b}}'
      scope: support.constant.property-value.css
